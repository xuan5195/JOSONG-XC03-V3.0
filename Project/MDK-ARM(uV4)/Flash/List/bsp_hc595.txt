; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_hc595.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_hc595.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User -I"C:\Users\xuan5\Desktop\JOSONG-XS03 V3.0\Project\MDK-ARM(uV4)\RTE" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\bsp_hc595.crf ..\..\User\bsp\bsp_hc595.c]
                          THUMB

                          AREA ||i.BspLed_Show||, CODE, READONLY, ALIGN=2

                  BspLed_Show PROC
;;;30     
;;;31     static void BspLed_Show(u16 ShowDat)//0100= 0000 0100 //0200//0400
000000  b570              PUSH     {r4-r6,lr}
;;;32     {
000002  4604              MOV      r4,r0
;;;33     	u8 i;
;;;34     	u16 j = ShowDat;
000004  4625              MOV      r5,r4
;;;35     	Led_RCLK_Low();
000006  f44f6180          MOV      r1,#0x400
00000a  4821              LDR      r0,|L1.144|
00000c  f7fffffe          BL       GPIO_ResetBits
;;;36     	Led_SRCLK_Low();
000010  f44f6100          MOV      r1,#0x800
000014  481e              LDR      r0,|L1.144|
000016  f7fffffe          BL       GPIO_ResetBits
;;;37     	HC595_Delay(1);
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       HC595_Delay
;;;38     	for(i=0;i<16;i++)
000020  2600              MOVS     r6,#0
000022  e025              B        |L1.112|
                  |L1.36|
;;;39     	{  
;;;40     		if((j&0x8000) == 0x8000){	Led_DAT_High();	}
000024  f4054000          AND      r0,r5,#0x8000
000028  f5b04f00          CMP      r0,#0x8000
00002c  d105              BNE      |L1.58|
00002e  f44f5180          MOV      r1,#0x1000
000032  4817              LDR      r0,|L1.144|
000034  f7fffffe          BL       GPIO_SetBits
000038  e004              B        |L1.68|
                  |L1.58|
;;;41     		else					{	Led_DAT_Low();	}
00003a  f44f5180          MOV      r1,#0x1000
00003e  4814              LDR      r0,|L1.144|
000040  f7fffffe          BL       GPIO_ResetBits
                  |L1.68|
;;;42     		HC595_Delay(1);
000044  2001              MOVS     r0,#1
000046  f7fffffe          BL       HC595_Delay
;;;43     		Led_SRCLK_High();	//上升沿，数据移入
00004a  f44f6100          MOV      r1,#0x800
00004e  4810              LDR      r0,|L1.144|
000050  f7fffffe          BL       GPIO_SetBits
;;;44     		HC595_Delay(1);		//修改延时,调整上升沿顺序，解决输出误动作问题
000054  2001              MOVS     r0,#1
000056  f7fffffe          BL       HC595_Delay
;;;45     		Led_SRCLK_Low();
00005a  f44f6100          MOV      r1,#0x800
00005e  480c              LDR      r0,|L1.144|
000060  f7fffffe          BL       GPIO_ResetBits
;;;46     		j<<=1;
000064  f64f70ff          MOV      r0,#0xffff
000068  ea000545          AND      r5,r0,r5,LSL #1
00006c  1c70              ADDS     r0,r6,#1              ;38
00006e  b2c6              UXTB     r6,r0                 ;38
                  |L1.112|
000070  2e10              CMP      r6,#0x10              ;38
000072  dbd7              BLT      |L1.36|
;;;47     	}
;;;48     	Led_RCLK_High(); 	//产生一个上升沿，将数据更新并口输出
000074  f44f6180          MOV      r1,#0x400
000078  4805              LDR      r0,|L1.144|
00007a  f7fffffe          BL       GPIO_SetBits
;;;49     	HC595_Delay(1);
00007e  2001              MOVS     r0,#1
000080  f7fffffe          BL       HC595_Delay
;;;50     	Led_RCLK_Low();
000084  f44f6180          MOV      r1,#0x400
000088  4801              LDR      r0,|L1.144|
00008a  f7fffffe          BL       GPIO_ResetBits
;;;51     }
00008e  bd70              POP      {r4-r6,pc}
;;;52     
                          ENDP

                  |L1.144|
                          DCD      0x40011000

                          AREA ||i.HC595_Delay||, CODE, READONLY, ALIGN=1

                  HC595_Delay PROC
;;;5      static uint16_t g_LedShowDat=0;
;;;6      static void HC595_Delay(u16 z) 
000000  4601              MOV      r1,r0
;;;7      { 
;;;8      	u8 x;
;;;9      	while(z--)
000002  e005              B        |L2.16|
                  |L2.4|
;;;10     	{
;;;11     		for(x=10;x>0;x--);
000004  200a              MOVS     r0,#0xa
000006  e001              B        |L2.12|
                  |L2.8|
000008  1e42              SUBS     r2,r0,#1
00000a  b2d0              UXTB     r0,r2
                  |L2.12|
00000c  2800              CMP      r0,#0
00000e  dcfb              BGT      |L2.8|
                  |L2.16|
000010  1e0a              SUBS     r2,r1,#0              ;9
000012  f1a10301          SUB      r3,r1,#1              ;9
000016  b299              UXTH     r1,r3                 ;9
000018  d1f4              BNE      |L2.4|
;;;12     	}
;;;13     }
00001a  4770              BX       lr
;;;14     void bsp_HC595_Config(void)
                          ENDP


                          AREA ||i.KMOFF_Show||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  KMOFF_Show PROC
;;;58     }
;;;59     void KMOFF_Show(u16 ShowDat)
000000  b510              PUSH     {r4,lr}
;;;60     {
000002  4604              MOV      r4,r0
;;;61         g_LedShowDat = g_LedShowDat|ShowDat;
000004  4807              LDR      r0,|L3.36|
000006  8800              LDRH     r0,[r0,#0]  ; g_LedShowDat
000008  4320              ORRS     r0,r0,r4
00000a  4906              LDR      r1,|L3.36|
00000c  8008              STRH     r0,[r1,#0]
;;;62     	printf("g_LedShowDat: %02X...\r\n",g_LedShowDat);
00000e  4608              MOV      r0,r1
000010  8801              LDRH     r1,[r0,#0]  ; g_LedShowDat
000012  a005              ADR      r0,|L3.40|
000014  f7fffffe          BL       __2printf
;;;63         BspLed_Show(g_LedShowDat);
000018  4802              LDR      r0,|L3.36|
00001a  8800              LDRH     r0,[r0,#0]  ; g_LedShowDat
00001c  f7fffffe          BL       BspLed_Show
;;;64     }
000020  bd10              POP      {r4,pc}
;;;65     
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      g_LedShowDat
                  |L3.40|
000028  675f4c65          DCB      "g_LedShowDat: %02X...\r\n",0
00002c  6453686f
000030  77446174
000034  3a202530
000038  32582e2e
00003c  2e0d0a00

                          AREA ||i.KMON_Show||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  KMON_Show PROC
;;;52     
;;;53     void KMON_Show(u16 ShowDat)
000000  b510              PUSH     {r4,lr}
;;;54     {
000002  4604              MOV      r4,r0
;;;55     	g_LedShowDat = g_LedShowDat&(~ShowDat);
000004  4807              LDR      r0,|L4.36|
000006  8800              LDRH     r0,[r0,#0]  ; g_LedShowDat
000008  43a0              BICS     r0,r0,r4
00000a  4906              LDR      r1,|L4.36|
00000c  8008              STRH     r0,[r1,#0]
;;;56     	printf("g_LedShowDat: %02X...\r\n",g_LedShowDat);
00000e  4608              MOV      r0,r1
000010  8801              LDRH     r1,[r0,#0]  ; g_LedShowDat
000012  a005              ADR      r0,|L4.40|
000014  f7fffffe          BL       __2printf
;;;57         BspLed_Show(g_LedShowDat);
000018  4802              LDR      r0,|L4.36|
00001a  8800              LDRH     r0,[r0,#0]  ; g_LedShowDat
00001c  f7fffffe          BL       BspLed_Show
;;;58     }
000020  bd10              POP      {r4,pc}
;;;59     void KMOFF_Show(u16 ShowDat)
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      g_LedShowDat
                  |L4.40|
000028  675f4c65          DCB      "g_LedShowDat: %02X...\r\n",0
00002c  6453686f
000030  77446174
000034  3a202530
000038  32582e2e
00003c  2e0d0a00

                          AREA ||i.bsp_HC595_Config||, CODE, READONLY, ALIGN=2

                  bsp_HC595_Config PROC
;;;13     }
;;;14     void bsp_HC595_Config(void)
000000  b508              PUSH     {r3,lr}
;;;15     {
;;;16     	GPIO_InitTypeDef GPIO_InitStructure;
;;;17     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOC, ENABLE); 
000002  2101              MOVS     r1,#1
000004  2014              MOVS     r0,#0x14
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;18     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10|GPIO_Pin_11|GPIO_Pin_12;
00000a  f44f50e0          MOV      r0,#0x1c00
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;19     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000012  2010              MOVS     r0,#0x10
000014  f88d0003          STRB     r0,[sp,#3]
;;;20     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000018  2003              MOVS     r0,#3
00001a  f88d0002          STRB     r0,[sp,#2]
;;;21     	GPIO_Init(GPIOC, &GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  480e              LDR      r0,|L5.92|
000022  f7fffffe          BL       GPIO_Init
;;;22     
;;;23     	HC595_E1_OFF();HC595_E2_OFF();	//防止继电器误动作
000026  2104              MOVS     r1,#4
000028  480d              LDR      r0,|L5.96|
00002a  f7fffffe          BL       GPIO_SetBits
00002e  2108              MOVS     r1,#8
000030  480b              LDR      r0,|L5.96|
000032  f7fffffe          BL       GPIO_SetBits
;;;24     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2|GPIO_Pin_3;
000036  200c              MOVS     r0,#0xc
000038  f8ad0000          STRH     r0,[sp,#0]
;;;25     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00003c  2010              MOVS     r0,#0x10
00003e  f88d0003          STRB     r0,[sp,#3]
;;;26     	GPIO_Init(GPIOA, &GPIO_InitStructure);
000042  4669              MOV      r1,sp
000044  4806              LDR      r0,|L5.96|
000046  f7fffffe          BL       GPIO_Init
;;;27     	HC595_E1_OFF();HC595_E2_OFF();
00004a  2104              MOVS     r1,#4
00004c  4804              LDR      r0,|L5.96|
00004e  f7fffffe          BL       GPIO_SetBits
000052  2108              MOVS     r1,#8
000054  4802              LDR      r0,|L5.96|
000056  f7fffffe          BL       GPIO_SetBits
;;;28     //	HC595_E1_ON();HC595_E2_ON();
;;;29     }
00005a  bd08              POP      {r3,pc}
;;;30     
                          ENDP

                  |L5.92|
                          DCD      0x40011000
                  |L5.96|
                          DCD      0x40010800

                          AREA ||.data||, DATA, ALIGN=1

                  g_LedShowDat
000000  0000              DCW      0x0000
