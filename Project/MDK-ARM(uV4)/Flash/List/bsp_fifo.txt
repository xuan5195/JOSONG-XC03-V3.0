; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_fifo.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_fifo.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User -I"C:\Users\xuan5\Desktop\JOSONG-XS03 V3.0\Project\MDK-ARM(uV4)\RTE" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\bsp_fifo.crf ..\..\User\bsp\bsp_fifo.c]
                          THUMB

                          AREA ||i.bsp_GetCQ||, CODE, READONLY, ALIGN=2

                  bsp_GetCQ PROC
;;;51     */
;;;52     uint8_t bsp_GetCQ(uint8_t *_Date)
000000  b510              PUSH     {r4,lr}
;;;53     {
000002  4604              MOV      r4,r0
;;;54     	if (s_tCQ.Read == s_tCQ.Write)
000004  4811              LDR      r0,|L1.76|
000006  f89000a0          LDRB     r0,[r0,#0xa0]  ; s_tCQ
00000a  4910              LDR      r1,|L1.76|
00000c  f89110a1          LDRB     r1,[r1,#0xa1]  ; s_tCQ
000010  4288              CMP      r0,r1
000012  d101              BNE      |L1.24|
;;;55     	{
;;;56     		return CQ_NONE;
000014  2000              MOVS     r0,#0
                  |L1.22|
;;;57     	}
;;;58     	else
;;;59     	{
;;;60     		memcpy(_Date,s_tCQ.Buf[s_tCQ.Read],16);
;;;61     		if (++s_tCQ.Read >= CQ_FIFO_SIZE)
;;;62     		{
;;;63     			s_tCQ.Read = 0;
;;;64     		}
;;;65     		return CQ_OK;
;;;66     	}
;;;67     }
000016  bd10              POP      {r4,pc}
                  |L1.24|
000018  480c              LDR      r0,|L1.76|
00001a  f89000a0          LDRB     r0,[r0,#0xa0]         ;60  ; s_tCQ
00001e  4a0b              LDR      r2,|L1.76|
000020  eb021100          ADD      r1,r2,r0,LSL #4       ;60
000024  2210              MOVS     r2,#0x10              ;60
000026  4620              MOV      r0,r4                 ;60
000028  f7fffffe          BL       __aeabi_memcpy
00002c  4807              LDR      r0,|L1.76|
00002e  f89000a0          LDRB     r0,[r0,#0xa0]         ;61  ; s_tCQ
000032  1c40              ADDS     r0,r0,#1              ;61
000034  b2c0              UXTB     r0,r0                 ;61
000036  4905              LDR      r1,|L1.76|
000038  f88100a0          STRB     r0,[r1,#0xa0]         ;61
00003c  280a              CMP      r0,#0xa               ;61
00003e  db02              BLT      |L1.70|
000040  2000              MOVS     r0,#0                 ;63
000042  f88100a0          STRB     r0,[r1,#0xa0]         ;63
                  |L1.70|
000046  2001              MOVS     r0,#1                 ;65
000048  e7e5              B        |L1.22|
;;;68     
                          ENDP

00004a  0000              DCW      0x0000
                  |L1.76|
                          DCD      s_tCQ

                          AREA ||i.bsp_GetCQ2||, CODE, READONLY, ALIGN=2

                  bsp_GetCQ2 PROC
;;;76     */
;;;77     uint8_t bsp_GetCQ2(uint8_t *_Date)
000000  b510              PUSH     {r4,lr}
;;;78     {
000002  4604              MOV      r4,r0
;;;79     	if (s_tCQ.Read2 == s_tCQ.Write)
000004  4811              LDR      r0,|L2.76|
000006  f89000a2          LDRB     r0,[r0,#0xa2]  ; s_tCQ
00000a  4910              LDR      r1,|L2.76|
00000c  f89110a1          LDRB     r1,[r1,#0xa1]  ; s_tCQ
000010  4288              CMP      r0,r1
000012  d101              BNE      |L2.24|
;;;80     	{
;;;81     		return CQ_NONE;
000014  2000              MOVS     r0,#0
                  |L2.22|
;;;82     	}
;;;83     	else
;;;84     	{
;;;85     		memcpy(_Date,s_tCQ.Buf[s_tCQ.Read2],16);
;;;86     		if (++s_tCQ.Read2 >= CQ_FIFO_SIZE)
;;;87     		{
;;;88     			s_tCQ.Read2 = 0;
;;;89     		}
;;;90     		return CQ_OK;
;;;91     	}
;;;92     }
000016  bd10              POP      {r4,pc}
                  |L2.24|
000018  480c              LDR      r0,|L2.76|
00001a  f89000a2          LDRB     r0,[r0,#0xa2]         ;85  ; s_tCQ
00001e  4a0b              LDR      r2,|L2.76|
000020  eb021100          ADD      r1,r2,r0,LSL #4       ;85
000024  2210              MOVS     r2,#0x10              ;85
000026  4620              MOV      r0,r4                 ;85
000028  f7fffffe          BL       __aeabi_memcpy
00002c  4807              LDR      r0,|L2.76|
00002e  f89000a2          LDRB     r0,[r0,#0xa2]         ;86  ; s_tCQ
000032  1c40              ADDS     r0,r0,#1              ;86
000034  b2c0              UXTB     r0,r0                 ;86
000036  4905              LDR      r1,|L2.76|
000038  f88100a2          STRB     r0,[r1,#0xa2]         ;86
00003c  280a              CMP      r0,#0xa               ;86
00003e  db02              BLT      |L2.70|
000040  2000              MOVS     r0,#0                 ;88
000042  f88100a2          STRB     r0,[r1,#0xa2]         ;88
                  |L2.70|
000046  2001              MOVS     r0,#1                 ;90
000048  e7e5              B        |L2.22|
;;;93     
                          ENDP

00004a  0000              DCW      0x0000
                  |L2.76|
                          DCD      s_tCQ

                          AREA ||i.bsp_InitCQVar||, CODE, READONLY, ALIGN=2

                  bsp_InitCQVar PROC
;;;16     */
;;;17     void bsp_InitCQVar(void)
000000  2000              MOVS     r0,#0
;;;18     {
;;;19     	s_tCQ.Read  = 0;
000002  4907              LDR      r1,|L3.32|
000004  f88100a0          STRB     r0,[r1,#0xa0]
;;;20     	s_tCQ.Write = 0;
000008  f88100a1          STRB     r0,[r1,#0xa1]
;;;21     	s_tCQ.Read2 = 0;
00000c  f88100a2          STRB     r0,[r1,#0xa2]
;;;22     	s_gCQ.Read  = 0;
000010  4904              LDR      r1,|L3.36|
000012  f88100a0          STRB     r0,[r1,#0xa0]
;;;23     	s_gCQ.Write = 0;
000016  f88100a1          STRB     r0,[r1,#0xa1]
;;;24     	s_gCQ.Read2 = 0;
00001a  f88100a2          STRB     r0,[r1,#0xa2]
;;;25     }
00001e  4770              BX       lr
;;;26     /*
                          ENDP

                  |L3.32|
                          DCD      s_tCQ
                  |L3.36|
                          DCD      s_gCQ

                          AREA ||i.bsp_PutCQ||, CODE, READONLY, ALIGN=2

                  bsp_PutCQ PROC
;;;33     */
;;;34     void bsp_PutCQ(uint8_t *_Date)
000000  b510              PUSH     {r4,lr}
;;;35     {
000002  4604              MOV      r4,r0
;;;36     	memcpy(s_tCQ.Buf[s_tCQ.Write],_Date,16);
000004  490b              LDR      r1,|L4.52|
000006  f89110a1          LDRB     r1,[r1,#0xa1]  ; s_tCQ
00000a  4a0a              LDR      r2,|L4.52|
00000c  eb021001          ADD      r0,r2,r1,LSL #4
000010  2210              MOVS     r2,#0x10
000012  4621              MOV      r1,r4
000014  f7fffffe          BL       __aeabi_memcpy
;;;37     
;;;38     	if (++s_tCQ.Write  >= CQ_FIFO_SIZE)
000018  4806              LDR      r0,|L4.52|
00001a  f89000a1          LDRB     r0,[r0,#0xa1]  ; s_tCQ
00001e  1c40              ADDS     r0,r0,#1
000020  b2c0              UXTB     r0,r0
000022  4904              LDR      r1,|L4.52|
000024  f88100a1          STRB     r0,[r1,#0xa1]
000028  280a              CMP      r0,#0xa
00002a  db02              BLT      |L4.50|
;;;39     	{
;;;40     		s_tCQ.Write = 0;
00002c  2000              MOVS     r0,#0
00002e  f88100a1          STRB     r0,[r1,#0xa1]
                  |L4.50|
;;;41     	}
;;;42     }
000032  bd10              POP      {r4,pc}
;;;43     
                          ENDP

                  |L4.52|
                          DCD      s_tCQ

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  s_gCQ
                          %        163
                  s_tCQ
                          %        163
