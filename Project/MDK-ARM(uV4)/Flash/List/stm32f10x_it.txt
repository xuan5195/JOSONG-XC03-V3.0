; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f10x_it.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User -I"C:\Users\xuan5\Desktop\JOSONG-XS03 V3.0\Project\MDK-ARM(uV4)\RTE" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\stm32f10x_it.crf ..\..\User\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;61     */    
;;;62     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;63     {
;;;64       /* 当总线异常时进入死循环 */
;;;65       while (1)
000002  e7fe              B        |L1.2|
;;;66       {
;;;67       }
;;;68     }
;;;69     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;105    */   
;;;106    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;107    {
;;;108    }
;;;109    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;29     */ 
;;;30     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L3.2|
;;;31     {
;;;32       /* 当硬件失效异常发生时进入死循环 */
;;;33       while (1)
000002  e7fe              B        |L3.2|
;;;34       {
;;;35       }
;;;36     }
;;;37     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;45     */   
;;;46     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;47     {
;;;48       /* 当内存管理异常发生时进入死循环 */
;;;49       while (1)
000002  e7fe              B        |L4.2|
;;;50       {
;;;51       }
;;;52     }
;;;53     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;17     */  
;;;18     void NMI_Handler(void)
000000  4770              BX       lr
;;;19     {
;;;20     }
;;;21     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;117    */     
;;;118    void PendSV_Handler(void)
000000  4770              BX       lr
;;;119    {
;;;120    }
;;;121    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;93     */   
;;;94     void SVC_Handler(void)
000000  4770              BX       lr
;;;95     {
;;;96     }
;;;97     
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;130    extern void SysTick_ISR(void);	/* 声明调用外部的函数 */
;;;131    void SysTick_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;132    {
;;;133    	SysTick_ISR();	/* 这个函数在bsp_timer.c中 */
000002  f7fffffe          BL       SysTick_ISR
;;;134    }
000006  bd10              POP      {r4,pc}
;;;135    
                          ENDP


                          AREA ||i.TIM2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM2_IRQHandler PROC
;;;141    //定时器2中断服务程序	 
;;;142    void TIM2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;143    { 
;;;144     	if((TIM2CH1_CAPTURE_STA&0x80)==0)//还未成功捕获	
000002  4837              LDR      r0,|L9.224|
000004  7800              LDRB     r0,[r0,#0]  ; TIM2CH1_CAPTURE_STA
000006  f0000080          AND      r0,r0,#0x80
00000a  2800              CMP      r0,#0
00000c  d162              BNE      |L9.212|
;;;145    	{	  
;;;146    		if (TIM_GetITStatus(TIM2, TIM_IT_Update) != RESET)	//更新中断		 
00000e  2101              MOVS     r1,#1
000010  0788              LSLS     r0,r1,#30
000012  f7fffffe          BL       TIM_GetITStatus
000016  b1a8              CBZ      r0,|L9.68|
;;;147    		{	    
;;;148    			if(TIM2CH1_CAPTURE_STA&0x40)//已经捕获到高电平了
000018  4831              LDR      r0,|L9.224|
00001a  7800              LDRB     r0,[r0,#0]  ; TIM2CH1_CAPTURE_STA
00001c  f0000040          AND      r0,r0,#0x40
000020  b180              CBZ      r0,|L9.68|
;;;149    			{
;;;150    				if((TIM2CH1_CAPTURE_STA&0x3F)==0x3F)//低电平太长，清标志
000022  482f              LDR      r0,|L9.224|
000024  7800              LDRB     r0,[r0,#0]  ; TIM2CH1_CAPTURE_STA
000026  f000003f          AND      r0,r0,#0x3f
00002a  283f              CMP      r0,#0x3f
00002c  d105              BNE      |L9.58|
;;;151    				{
;;;152    					TIM2CH1_CAPTURE_STA = 0x00;	//清标志，等待下一次
00002e  2000              MOVS     r0,#0
000030  492b              LDR      r1,|L9.224|
000032  7008              STRB     r0,[r1,#0]
;;;153    					TIM2CH1_CAPTURE_VAL = 0x00;
000034  492b              LDR      r1,|L9.228|
000036  8008              STRH     r0,[r1,#0]
000038  e004              B        |L9.68|
                  |L9.58|
;;;154    				}
;;;155    				else TIM2CH1_CAPTURE_STA++;	//更新中断计数累加
00003a  4829              LDR      r0,|L9.224|
00003c  7800              LDRB     r0,[r0,#0]  ; TIM2CH1_CAPTURE_STA
00003e  1c40              ADDS     r0,r0,#1
000040  4927              LDR      r1,|L9.224|
000042  7008              STRB     r0,[r1,#0]
                  |L9.68|
;;;156    			}	 
;;;157    		}
;;;158    		if (TIM_GetITStatus(TIM2, TIM_IT_CC1) != RESET)//捕获1发生捕获事件
000044  2102              MOVS     r1,#2
000046  0748              LSLS     r0,r1,#29
000048  f7fffffe          BL       TIM_GetITStatus
00004c  2800              CMP      r0,#0
00004e  d041              BEQ      |L9.212|
;;;159    		{	
;;;160    			if((TIM2CH1_CAPTURE_STA&0x40)==0x40)		//捕获到上升沿		
000050  4823              LDR      r0,|L9.224|
000052  7800              LDRB     r0,[r0,#0]  ; TIM2CH1_CAPTURE_STA
000054  f0000040          AND      r0,r0,#0x40
000058  2840              CMP      r0,#0x40
00005a  d12c              BNE      |L9.182|
;;;161    			{	  			
;;;162    				TIM2CH1_CAPTURE_STA|=0x80;		//标记成功捕获到一次低电平脉宽
00005c  4820              LDR      r0,|L9.224|
00005e  7800              LDRB     r0,[r0,#0]  ; TIM2CH1_CAPTURE_STA
000060  f0400080          ORR      r0,r0,#0x80
000064  491e              LDR      r1,|L9.224|
000066  7008              STRB     r0,[r1,#0]
;;;163    				TIM2CH1_CAPTURE_VAL=TIM_GetCapture1(TIM2);	//取出捕获值
000068  f04f4080          MOV      r0,#0x40000000
00006c  f7fffffe          BL       TIM_GetCapture1
000070  491c              LDR      r1,|L9.228|
000072  8008              STRH     r0,[r1,#0]
;;;164    		   		TIM_OC1PolarityConfig(TIM2,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000074  2102              MOVS     r1,#2
000076  0748              LSLS     r0,r1,#29
000078  f7fffffe          BL       TIM_OC1PolarityConfig
;;;165    				//printf("low:%d us\r\n",TIM2CH1_CAPTURE_VAL);//打印总的低电平时间
;;;166    				if((TIM2CH1_CAPTURE_VAL>38)&&(TIM2CH1_CAPTURE_VAL<62)&&(TIM2CH1_CAPTURE_STA==0xC0))	//脉冲宽度
00007c  4819              LDR      r0,|L9.228|
00007e  8800              LDRH     r0,[r0,#0]  ; TIM2CH1_CAPTURE_VAL
000080  2826              CMP      r0,#0x26
000082  dd14              BLE      |L9.174|
000084  4817              LDR      r0,|L9.228|
000086  8800              LDRH     r0,[r0,#0]  ; TIM2CH1_CAPTURE_VAL
000088  283e              CMP      r0,#0x3e
00008a  da10              BGE      |L9.174|
00008c  4814              LDR      r0,|L9.224|
00008e  7800              LDRB     r0,[r0,#0]  ; TIM2CH1_CAPTURE_STA
000090  28c0              CMP      r0,#0xc0
000092  d10c              BNE      |L9.174|
;;;167    				{	//脉冲宽度为42-58uS
;;;168    					if(OutFlag==0xAA)	{	InPutCount++;		}	//放水标志
000094  4814              LDR      r0,|L9.232|
000096  7800              LDRB     r0,[r0,#0]  ; OutFlag
000098  28aa              CMP      r0,#0xaa
00009a  d105              BNE      |L9.168|
00009c  4813              LDR      r0,|L9.236|
00009e  7800              LDRB     r0,[r0,#0]  ; InPutCount
0000a0  1c40              ADDS     r0,r0,#1
0000a2  4912              LDR      r1,|L9.236|
0000a4  7008              STRB     r0,[r1,#0]
0000a6  e002              B        |L9.174|
                  |L9.168|
;;;169    					else				{	InPutCount = 0;		}	//清计数
0000a8  2000              MOVS     r0,#0
0000aa  4910              LDR      r1,|L9.236|
0000ac  7008              STRB     r0,[r1,#0]
                  |L9.174|
;;;170    				}
;;;171    				TIM2CH1_CAPTURE_STA=0x00;		//清准备下一次进入
0000ae  2000              MOVS     r0,#0
0000b0  490b              LDR      r1,|L9.224|
0000b2  7008              STRB     r0,[r1,#0]
0000b4  e00e              B        |L9.212|
                  |L9.182|
;;;172    			}
;;;173    			else  								//捕获下降沿
;;;174    			{
;;;175    				TIM2CH1_CAPTURE_VAL = 0;		//清空
0000b6  2000              MOVS     r0,#0
0000b8  490a              LDR      r1,|L9.228|
0000ba  8008              STRH     r0,[r1,#0]
;;;176    				TIM2CH1_CAPTURE_STA = 0x40;		//标记捕获到了下降沿，并清更新中断计数(低6位)
0000bc  2040              MOVS     r0,#0x40
0000be  4908              LDR      r1,|L9.224|
0000c0  7008              STRB     r0,[r1,#0]
;;;177    	 			TIM_SetCounter(TIM2,0);			//清计数值
0000c2  2100              MOVS     r1,#0
0000c4  0600              LSLS     r0,r0,#24
0000c6  f7fffffe          BL       TIM_SetCounter
;;;178    		   		TIM_OC1PolarityConfig(TIM2,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
0000ca  2100              MOVS     r1,#0
0000cc  f04f4080          MOV      r0,#0x40000000
0000d0  f7fffffe          BL       TIM_OC1PolarityConfig
                  |L9.212|
;;;179    			}		    
;;;180    		}			     	    					   
;;;181     	}
;;;182     
;;;183        TIM_ClearITPendingBit(TIM2, TIM_IT_CC1|TIM_IT_Update); //清除中断标志位
0000d4  2103              MOVS     r1,#3
0000d6  f04f4080          MOV      r0,#0x40000000
0000da  f7fffffe          BL       TIM_ClearITPendingBit
;;;184     
;;;185    }
0000de  bd10              POP      {r4,pc}
;;;186    
                          ENDP

                  |L9.224|
                          DCD      TIM2CH1_CAPTURE_STA
                  |L9.228|
                          DCD      TIM2CH1_CAPTURE_VAL
                  |L9.232|
                          DCD      OutFlag
                  |L9.236|
                          DCD      InPutCount

                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;77     */   
;;;78     void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L10.2|
;;;79     {
;;;80       /* 当用法异常时进入死循环 */
;;;81       while (1)
000002  e7fe              B        |L10.2|
;;;82       {
;;;83       }
;;;84     }
;;;85     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=1

                  TIM2CH1_CAPTURE_STA
000000  0000              DCB      0x00,0x00
                  TIM2CH1_CAPTURE_VAL
000002  0000              DCB      0x00,0x00
