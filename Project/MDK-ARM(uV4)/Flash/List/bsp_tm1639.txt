; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_tm1639.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_tm1639.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User -I"C:\Users\xuan5\Desktop\JOSONG-XS03 V3.0\Project\MDK-ARM(uV4)\RTE" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\bsp_tm1639.crf ..\..\User\bsp\bsp_tm1639.c]
                          THUMB

                          AREA ||i.BspTM1639_ClearALL||, CODE, READONLY, ALIGN=2

                  BspTM1639_ClearALL PROC
;;;171    
;;;172    void BspTM1639_ClearALL(void)
000000  b510              PUSH     {r4,lr}
;;;173    {
;;;174    	u8 i;
;;;175    	TM1639_STB_High();
000002  2108              MOVS     r1,#8
000004  4814              LDR      r0,|L1.88|
000006  f7fffffe          BL       GPIO_SetBits
;;;176    	TM1639_CLK_High();
00000a  2104              MOVS     r1,#4
00000c  4812              LDR      r0,|L1.88|
00000e  f7fffffe          BL       GPIO_SetBits
;;;177    	TM1639_DIO_High();
000012  2102              MOVS     r1,#2
000014  4810              LDR      r0,|L1.88|
000016  f7fffffe          BL       GPIO_SetBits
;;;178    	BspTm1639_Writebyte(0x40);	//数据命令设置
00001a  2040              MOVS     r0,#0x40
00001c  f7fffffe          BL       BspTm1639_Writebyte
;;;179    	TM1639_STB_High();
000020  2108              MOVS     r1,#8
000022  480d              LDR      r0,|L1.88|
000024  f7fffffe          BL       GPIO_SetBits
;;;180    	BspTm1639_Writebyte(DIG0);	//显示地址 起始地址
000028  20c0              MOVS     r0,#0xc0
00002a  f7fffffe          BL       BspTm1639_Writebyte
;;;181    	for(i=0;i<16;i++)	BspTm1639_Writebyte(0x00);
00002e  2400              MOVS     r4,#0
000030  e004              B        |L1.60|
                  |L1.50|
000032  2000              MOVS     r0,#0
000034  f7fffffe          BL       BspTm1639_Writebyte
000038  1c60              ADDS     r0,r4,#1
00003a  b2c4              UXTB     r4,r0
                  |L1.60|
00003c  2c10              CMP      r4,#0x10
00003e  dbf8              BLT      |L1.50|
;;;182    	TM1639_STB_High();
000040  2108              MOVS     r1,#8
000042  4805              LDR      r0,|L1.88|
000044  f7fffffe          BL       GPIO_SetBits
;;;183    	BspTm1639_Writebyte(LEVEL_OFF);	//显示控制命令
000048  2080              MOVS     r0,#0x80
00004a  f7fffffe          BL       BspTm1639_Writebyte
;;;184    	TM1639_STB_High();
00004e  2108              MOVS     r1,#8
000050  4801              LDR      r0,|L1.88|
000052  f7fffffe          BL       GPIO_SetBits
;;;185    }
000056  bd10              POP      {r4,pc}
;;;186    
                          ENDP

                  |L1.88|
                          DCD      0x40011000

                          AREA ||i.BspTm1639_Config||, CODE, READONLY, ALIGN=2

                  BspTm1639_Config PROC
;;;20     
;;;21     void BspTm1639_Config(void) 
000000  b508              PUSH     {r3,lr}
;;;22     {
;;;23     	GPIO_InitTypeDef GPIO_InitStructure;
;;;24     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC , ENABLE); 
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;25     
;;;26     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1|GPIO_Pin_2|GPIO_Pin_3;
00000a  200e              MOVS     r0,#0xe
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;27     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;28     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;29     	GPIO_Init(GPIOC, &GPIO_InitStructure);					 
00001c  4669              MOV      r1,sp
00001e  4803              LDR      r0,|L2.44|
000020  f7fffffe          BL       GPIO_Init
;;;30     
;;;31     	BspTM1639_ClearALL();	//上电清显示
000024  f7fffffe          BL       BspTM1639_ClearALL
;;;32     }
000028  bd08              POP      {r3,pc}
;;;33     
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x40011000

                          AREA ||i.BspTm1639_Delay||, CODE, READONLY, ALIGN=1

                  BspTm1639_Delay PROC
;;;11     
;;;12     void BspTm1639_Delay(__IO uint16_t z) 
000000  b501              PUSH     {r0,lr}
;;;13     { 
000002  b081              SUB      sp,sp,#4
;;;14     	__IO uint8_t x;
;;;15     	while(z--)
000004  e00b              B        |L3.30|
                  |L3.6|
;;;16     	{
;;;17     		for(x=100;x>0;x--);
000006  2064              MOVS     r0,#0x64
000008  9000              STR      r0,[sp,#0]
00000a  e004              B        |L3.22|
                  |L3.12|
00000c  f89d0000          LDRB     r0,[sp,#0]
000010  1e40              SUBS     r0,r0,#1
000012  b2c0              UXTB     r0,r0
000014  9000              STR      r0,[sp,#0]
                  |L3.22|
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  2800              CMP      r0,#0
00001c  dcf6              BGT      |L3.12|
                  |L3.30|
00001e  f8bd0004          LDRH     r0,[sp,#4]            ;15
000022  1e41              SUBS     r1,r0,#1              ;15
000024  b289              UXTH     r1,r1                 ;15
000026  9101              STR      r1,[sp,#4]            ;15
000028  2800              CMP      r0,#0                 ;15
00002a  d1ec              BNE      |L3.6|
;;;18     	}
;;;19     }
00002c  bd0c              POP      {r2,r3,pc}
;;;20     
                          ENDP


                          AREA ||i.BspTm1639_Show||, CODE, READONLY, ALIGN=2

                  BspTm1639_Show PROC
;;;49     
;;;50     void BspTm1639_Show(uint8_t ShowMode,uint32_t ShowDate)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;51     {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
;;;52      	uint8_t i,udat;
;;;53      	if((OldShowMode==ShowMode)&&(OldShowDate==ShowDate));	//数据、模式相同不刷新
000008  48fe              LDR      r0,|L4.1028|
00000a  7800              LDRB     r0,[r0,#0]  ; OldShowMode
00000c  42b8              CMP      r0,r7
00000e  d103              BNE      |L4.24|
000010  48fd              LDR      r0,|L4.1032|
000012  6800              LDR      r0,[r0,#0]  ; OldShowDate
000014  42a8              CMP      r0,r5
000016  d06f              BEQ      |L4.248|
                  |L4.24|
;;;54      	else
;;;55      	{
;;;56     		if(OldShowMode!=ShowMode)	BspTM1639_ClearALL();	//显示模式不同时，清显示
000018  48fa              LDR      r0,|L4.1028|
00001a  7800              LDRB     r0,[r0,#0]  ; OldShowMode
00001c  42b8              CMP      r0,r7
00001e  d001              BEQ      |L4.36|
000020  f7fffffe          BL       BspTM1639_ClearALL
                  |L4.36|
;;;57      		OldShowMode = ShowMode;		//保存数据  防止重复更新
000024  48f7              LDR      r0,|L4.1028|
000026  7007              STRB     r7,[r0,#0]
;;;58     		OldShowDate = ShowDate;		//		
000028  48f7              LDR      r0,|L4.1032|
00002a  6005              STR      r5,[r0,#0]  ; OldShowDate
;;;59     		BspTm1639_Writebyte(MD_AUTO);	//设置为地址自动加1写显示数据
00002c  2040              MOVS     r0,#0x40
00002e  f7fffffe          BL       BspTm1639_Writebyte
;;;60     		TM1639_STB_High();
000032  2108              MOVS     r1,#8
000034  48f5              LDR      r0,|L4.1036|
000036  f7fffffe          BL       GPIO_SetBits
;;;61     		if(ShowMode==0x02)
00003a  2f02              CMP      r7,#2
00003c  d10c              BNE      |L4.88|
;;;62     		{
;;;63     			BspTm1639_Writebyte(DIG0);
00003e  20c0              MOVS     r0,#0xc0
000040  f7fffffe          BL       BspTm1639_Writebyte
;;;64     			for(i=0;i<16;i++)	BspTm1639_Writebyte(0x00);
000044  2600              MOVS     r6,#0
000046  e004              B        |L4.82|
                  |L4.72|
000048  2000              MOVS     r0,#0
00004a  f7fffffe          BL       BspTm1639_Writebyte
00004e  1c70              ADDS     r0,r6,#1
000050  b2c6              UXTB     r6,r0
                  |L4.82|
000052  2e10              CMP      r6,#0x10
000054  dbf8              BLT      |L4.72|
000056  e201              B        |L4.1116|
                  |L4.88|
;;;65     		}
;;;66     		else if(ShowMode==0x01)	//上电初始化显示值
000058  2f01              CMP      r7,#1
00005a  d11b              BNE      |L4.148|
;;;67     		{
;;;68     			BspTm1639_Writebyte(DIG0);
00005c  20c0              MOVS     r0,#0xc0
00005e  f7fffffe          BL       BspTm1639_Writebyte
;;;69     			BspTm1639_Writebyte(0x0F);	BspTm1639_Writebyte(0x00);
000062  200f              MOVS     r0,#0xf
000064  f7fffffe          BL       BspTm1639_Writebyte
000068  2000              MOVS     r0,#0
00006a  f7fffffe          BL       BspTm1639_Writebyte
;;;70     			for(i=0;i<2;i++)
00006e  2600              MOVS     r6,#0
000070  e007              B        |L4.130|
                  |L4.114|
;;;71     			{
;;;72     				BspTm1639_Writebyte(0x09);	BspTm1639_Writebyte(0x00);
000072  2009              MOVS     r0,#9
000074  f7fffffe          BL       BspTm1639_Writebyte
000078  2000              MOVS     r0,#0
00007a  f7fffffe          BL       BspTm1639_Writebyte
00007e  1c70              ADDS     r0,r6,#1              ;70
000080  b2c6              UXTB     r6,r0                 ;70
                  |L4.130|
000082  2e02              CMP      r6,#2                 ;70
000084  dbf5              BLT      |L4.114|
;;;73     			}
;;;74     			BspTm1639_Writebyte(0x09);	BspTm1639_Writebyte(0x03);		
000086  2009              MOVS     r0,#9
000088  f7fffffe          BL       BspTm1639_Writebyte
00008c  2003              MOVS     r0,#3
00008e  f7fffffe          BL       BspTm1639_Writebyte
000092  e1e3              B        |L4.1116|
                  |L4.148|
;;;75     		}
;;;76     		else if(ShowMode==0x06)	//显示代码，用于安装检测使用
000094  2f06              CMP      r7,#6
000096  d130              BNE      |L4.250|
;;;77     		{
;;;78     			BspTm1639_Writebyte(DIG0);
000098  20c0              MOVS     r0,#0xc0
00009a  f7fffffe          BL       BspTm1639_Writebyte
;;;79     			for(i=0;i<3;i++)
00009e  2600              MOVS     r6,#0
0000a0  e007              B        |L4.178|
                  |L4.162|
;;;80     			{
;;;81     				BspTm1639_Writebyte(0x00);	BspTm1639_Writebyte(0x04);
0000a2  2000              MOVS     r0,#0
0000a4  f7fffffe          BL       BspTm1639_Writebyte
0000a8  2004              MOVS     r0,#4
0000aa  f7fffffe          BL       BspTm1639_Writebyte
0000ae  1c70              ADDS     r0,r6,#1              ;79
0000b0  b2c6              UXTB     r6,r0                 ;79
                  |L4.178|
0000b2  2e03              CMP      r6,#3                 ;79
0000b4  dbf5              BLT      |L4.162|
;;;82     			}
;;;83     			//VERSION 显示固件版本号
;;;84     			udat = VERSION&0x0F;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0000b6  2401              MOVS     r4,#1
0000b8  49d5              LDR      r1,|L4.1040|
0000ba  5d08              LDRB     r0,[r1,r4]
0000bc  f7fffffe          BL       BspTm1639_Writebyte
0000c0  49d3              LDR      r1,|L4.1040|
0000c2  5d09              LDRB     r1,[r1,r4]
0000c4  1108              ASRS     r0,r1,#4
0000c6  f7fffffe          BL       BspTm1639_Writebyte
;;;85     			udat = (VERSION&0xF0)>>4;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0000ca  2400              MOVS     r4,#0
0000cc  49d0              LDR      r1,|L4.1040|
0000ce  5d08              LDRB     r0,[r1,r4]
0000d0  f7fffffe          BL       BspTm1639_Writebyte
0000d4  49ce              LDR      r1,|L4.1040|
0000d6  5d09              LDRB     r1,[r1,r4]
0000d8  1108              ASRS     r0,r1,#4
0000da  f7fffffe          BL       BspTm1639_Writebyte
;;;86     			for(i=0;i<3;i++)
0000de  2600              MOVS     r6,#0
0000e0  e007              B        |L4.242|
                  |L4.226|
;;;87     			{
;;;88     				BspTm1639_Writebyte(0x00);	BspTm1639_Writebyte(0x04);
0000e2  2000              MOVS     r0,#0
0000e4  f7fffffe          BL       BspTm1639_Writebyte
0000e8  2004              MOVS     r0,#4
0000ea  f7fffffe          BL       BspTm1639_Writebyte
0000ee  1c70              ADDS     r0,r6,#1              ;86
0000f0  b2c6              UXTB     r6,r0                 ;86
                  |L4.242|
0000f2  2e03              CMP      r6,#3                 ;86
0000f4  dbf5              BLT      |L4.226|
0000f6  e1b1              B        |L4.1116|
                  |L4.248|
0000f8  e1bb              B        |L4.1138|
                  |L4.250|
;;;89     			}
;;;90     		}
;;;91     		else if(ShowMode==0x03)
0000fa  2f03              CMP      r7,#3
0000fc  d16d              BNE      |L4.474|
;;;92     		{
;;;93     			BspTm1639_Writebyte(DIG0);
0000fe  20c0              MOVS     r0,#0xc0
000100  f7fffffe          BL       BspTm1639_Writebyte
;;;94     			BspTm1639_Writebyte(table[ShowDate%10]);		BspTm1639_Writebyte(table[ShowDate%10]>>4);
000104  200a              MOVS     r0,#0xa
000106  fbb5f1f0          UDIV     r1,r5,r0
00010a  fb005011          MLS      r0,r0,r1,r5
00010e  49c0              LDR      r1,|L4.1040|
000110  f8118000          LDRB     r8,[r1,r0]
000114  4640              MOV      r0,r8
000116  f7fffffe          BL       BspTm1639_Writebyte
00011a  200a              MOVS     r0,#0xa
00011c  fbb5f1f0          UDIV     r1,r5,r0
000120  fb005011          MLS      r0,r0,r1,r5
000124  49ba              LDR      r1,|L4.1040|
000126  5c08              LDRB     r0,[r1,r0]
000128  ea4f1820          ASR      r8,r0,#4
00012c  4640              MOV      r0,r8
00012e  f7fffffe          BL       BspTm1639_Writebyte
;;;95     			BspTm1639_Writebyte(table[ShowDate/10%10]);		BspTm1639_Writebyte(table[ShowDate/10%10]>>4);
000132  200a              MOVS     r0,#0xa
000134  fbb5f0f0          UDIV     r0,r5,r0
000138  210a              MOVS     r1,#0xa
00013a  fbb0f2f1          UDIV     r2,r0,r1
00013e  fb010012          MLS      r0,r1,r2,r0
000142  49b3              LDR      r1,|L4.1040|
000144  f8118000          LDRB     r8,[r1,r0]
000148  4640              MOV      r0,r8
00014a  f7fffffe          BL       BspTm1639_Writebyte
00014e  200a              MOVS     r0,#0xa
000150  fbb5f0f0          UDIV     r0,r5,r0
000154  210a              MOVS     r1,#0xa
000156  fbb0f2f1          UDIV     r2,r0,r1
00015a  fb010012          MLS      r0,r1,r2,r0
00015e  49ac              LDR      r1,|L4.1040|
000160  5c08              LDRB     r0,[r1,r0]
000162  ea4f1820          ASR      r8,r0,#4
000166  4640              MOV      r0,r8
000168  f7fffffe          BL       BspTm1639_Writebyte
;;;96     			BspTm1639_Writebyte(table[ShowDate/100]);		BspTm1639_Writebyte(table[ShowDate/100]>>4);
00016c  2064              MOVS     r0,#0x64
00016e  fbb5f0f0          UDIV     r0,r5,r0
000172  49a7              LDR      r1,|L4.1040|
000174  f8118000          LDRB     r8,[r1,r0]
000178  4640              MOV      r0,r8
00017a  f7fffffe          BL       BspTm1639_Writebyte
00017e  2064              MOVS     r0,#0x64
000180  fbb5f0f0          UDIV     r0,r5,r0
000184  49a2              LDR      r1,|L4.1040|
000186  5c08              LDRB     r0,[r1,r0]
000188  ea4f1820          ASR      r8,r0,#4
00018c  4640              MOV      r0,r8
00018e  f7fffffe          BL       BspTm1639_Writebyte
;;;97     			BspTm1639_Writebyte(table[0]);					BspTm1639_Writebyte(table[0]>>4|0x08);
000192  499f              LDR      r1,|L4.1040|
000194  7808              LDRB     r0,[r1,#0]  ; table
000196  f7fffffe          BL       BspTm1639_Writebyte
00019a  499d              LDR      r1,|L4.1040|
00019c  7809              LDRB     r1,[r1,#0]  ; table
00019e  2208              MOVS     r2,#8
0001a0  ea421021          ORR      r0,r2,r1,ASR #4
0001a4  f7fffffe          BL       BspTm1639_Writebyte
;;;98     			BspTm1639_Writebyte(0x00);						BspTm1639_Writebyte(0x00);//DIG4
0001a8  2000              MOVS     r0,#0
0001aa  f7fffffe          BL       BspTm1639_Writebyte
0001ae  2000              MOVS     r0,#0
0001b0  f7fffffe          BL       BspTm1639_Writebyte
;;;99     			BspTm1639_Writebyte(0x00);						BspTm1639_Writebyte(0x00);//DIG5
0001b4  2000              MOVS     r0,#0
0001b6  f7fffffe          BL       BspTm1639_Writebyte
0001ba  2000              MOVS     r0,#0
0001bc  f7fffffe          BL       BspTm1639_Writebyte
;;;100    			BspTm1639_Writebyte(0x00);						BspTm1639_Writebyte(0x00);//DIG4
0001c0  2000              MOVS     r0,#0
0001c2  f7fffffe          BL       BspTm1639_Writebyte
0001c6  2000              MOVS     r0,#0
0001c8  f7fffffe          BL       BspTm1639_Writebyte
;;;101    			BspTm1639_Writebyte(0x00);						BspTm1639_Writebyte(0x00);//DIG5
0001cc  2000              MOVS     r0,#0
0001ce  f7fffffe          BL       BspTm1639_Writebyte
0001d2  2000              MOVS     r0,#0
0001d4  f7fffffe          BL       BspTm1639_Writebyte
0001d8  e140              B        |L4.1116|
                  |L4.474|
;;;102    		}
;;;103    		else if(ShowMode==0x04)
0001da  2f04              CMP      r7,#4
0001dc  d16f              BNE      |L4.702|
;;;104    		{
;;;105    			BspTm1639_Writebyte(DIG0);
0001de  20c0              MOVS     r0,#0xc0
0001e0  f7fffffe          BL       BspTm1639_Writebyte
;;;106    			ShowDate = ShowDate & 0x00FFFFFF;	//清高位，高位为版本号不是金额
0001e4  f025457f          BIC      r5,r5,#0xff000000
;;;107    			if(ShowDate<1000000)
0001e8  488a              LDR      r0,|L4.1044|
0001ea  4285              CMP      r5,r0
0001ec  d269              BCS      |L4.706|
;;;108    			{
;;;109    			    udat = ShowDate%10;			BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0001ee  200a              MOVS     r0,#0xa
0001f0  fbb5f1f0          UDIV     r1,r5,r0
0001f4  fb005411          MLS      r4,r0,r1,r5
0001f8  4985              LDR      r1,|L4.1040|
0001fa  5d08              LDRB     r0,[r1,r4]
0001fc  f7fffffe          BL       BspTm1639_Writebyte
000200  4983              LDR      r1,|L4.1040|
000202  5d09              LDRB     r1,[r1,r4]
000204  1108              ASRS     r0,r1,#4
000206  f7fffffe          BL       BspTm1639_Writebyte
;;;110    			    udat = ShowDate/10%10;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
00020a  200a              MOVS     r0,#0xa
00020c  fbb5f0f0          UDIV     r0,r5,r0
000210  210a              MOVS     r1,#0xa
000212  fbb0f2f1          UDIV     r2,r0,r1
000216  fb010412          MLS      r4,r1,r2,r0
00021a  497d              LDR      r1,|L4.1040|
00021c  5d08              LDRB     r0,[r1,r4]
00021e  f7fffffe          BL       BspTm1639_Writebyte
000222  497b              LDR      r1,|L4.1040|
000224  5d09              LDRB     r1,[r1,r4]
000226  1108              ASRS     r0,r1,#4
000228  f7fffffe          BL       BspTm1639_Writebyte
;;;111    			    udat = ShowDate/100%10;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
00022c  2064              MOVS     r0,#0x64
00022e  fbb5f0f0          UDIV     r0,r5,r0
000232  210a              MOVS     r1,#0xa
000234  fbb0f2f1          UDIV     r2,r0,r1
000238  fb010412          MLS      r4,r1,r2,r0
00023c  4974              LDR      r1,|L4.1040|
00023e  5d08              LDRB     r0,[r1,r4]
000240  f7fffffe          BL       BspTm1639_Writebyte
000244  4972              LDR      r1,|L4.1040|
000246  5d09              LDRB     r1,[r1,r4]
000248  1108              ASRS     r0,r1,#4
00024a  f7fffffe          BL       BspTm1639_Writebyte
;;;112    			    udat = ShowDate/1000%10;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4|0x08);//个位
00024e  f44f707a          MOV      r0,#0x3e8
000252  fbb5f0f0          UDIV     r0,r5,r0
000256  210a              MOVS     r1,#0xa
000258  fbb0f2f1          UDIV     r2,r0,r1
00025c  fb010412          MLS      r4,r1,r2,r0
000260  496b              LDR      r1,|L4.1040|
000262  5d08              LDRB     r0,[r1,r4]
000264  f7fffffe          BL       BspTm1639_Writebyte
000268  4969              LDR      r1,|L4.1040|
00026a  5d09              LDRB     r1,[r1,r4]
00026c  2208              MOVS     r2,#8
00026e  ea421021          ORR      r0,r2,r1,ASR #4
000272  f7fffffe          BL       BspTm1639_Writebyte
;;;113    			    udat = ShowDate/10000%10;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);//十位
000276  f2427010          MOV      r0,#0x2710
00027a  fbb5f0f0          UDIV     r0,r5,r0
00027e  210a              MOVS     r1,#0xa
000280  fbb0f2f1          UDIV     r2,r0,r1
000284  fb010412          MLS      r4,r1,r2,r0
000288  4961              LDR      r1,|L4.1040|
00028a  5d08              LDRB     r0,[r1,r4]
00028c  f7fffffe          BL       BspTm1639_Writebyte
000290  495f              LDR      r1,|L4.1040|
000292  5d09              LDRB     r1,[r1,r4]
000294  1108              ASRS     r0,r1,#4
000296  f7fffffe          BL       BspTm1639_Writebyte
;;;114    			    udat = ShowDate/100000%10;	BspTm1639_Writebyte(table[udat]);   BspTm1639_Writebyte(table[udat]>>4);//百位       
00029a  485f              LDR      r0,|L4.1048|
00029c  fbb5f0f0          UDIV     r0,r5,r0
0002a0  210a              MOVS     r1,#0xa
0002a2  fbb0f2f1          UDIV     r2,r0,r1
0002a6  fb010412          MLS      r4,r1,r2,r0
0002aa  4959              LDR      r1,|L4.1040|
0002ac  5d08              LDRB     r0,[r1,r4]
0002ae  f7fffffe          BL       BspTm1639_Writebyte
0002b2  4957              LDR      r1,|L4.1040|
0002b4  5d09              LDRB     r1,[r1,r4]
0002b6  1108              ASRS     r0,r1,#4
0002b8  f7fffffe          BL       BspTm1639_Writebyte
0002bc  e06b              B        |L4.918|
                  |L4.702|
0002be  e077              B        |L4.944|
0002c0  e7ff              B        |L4.706|
                  |L4.706|
;;;115    			}
;;;116    			else
;;;117    			{
;;;118    			    udat = ShowDate/10%10;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0002c2  200a              MOVS     r0,#0xa
0002c4  fbb5f0f0          UDIV     r0,r5,r0
0002c8  210a              MOVS     r1,#0xa
0002ca  fbb0f2f1          UDIV     r2,r0,r1
0002ce  fb010412          MLS      r4,r1,r2,r0
0002d2  494f              LDR      r1,|L4.1040|
0002d4  5d08              LDRB     r0,[r1,r4]
0002d6  f7fffffe          BL       BspTm1639_Writebyte
0002da  494d              LDR      r1,|L4.1040|
0002dc  5d09              LDRB     r1,[r1,r4]
0002de  1108              ASRS     r0,r1,#4
0002e0  f7fffffe          BL       BspTm1639_Writebyte
;;;119    			    udat = ShowDate/100%10;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0002e4  2064              MOVS     r0,#0x64
0002e6  fbb5f0f0          UDIV     r0,r5,r0
0002ea  210a              MOVS     r1,#0xa
0002ec  fbb0f2f1          UDIV     r2,r0,r1
0002f0  fb010412          MLS      r4,r1,r2,r0
0002f4  4946              LDR      r1,|L4.1040|
0002f6  5d08              LDRB     r0,[r1,r4]
0002f8  f7fffffe          BL       BspTm1639_Writebyte
0002fc  4944              LDR      r1,|L4.1040|
0002fe  5d09              LDRB     r1,[r1,r4]
000300  1108              ASRS     r0,r1,#4
000302  f7fffffe          BL       BspTm1639_Writebyte
;;;120    			    udat = ShowDate/1000%10;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4|0x08);//个位
000306  f44f707a          MOV      r0,#0x3e8
00030a  fbb5f0f0          UDIV     r0,r5,r0
00030e  210a              MOVS     r1,#0xa
000310  fbb0f2f1          UDIV     r2,r0,r1
000314  fb010412          MLS      r4,r1,r2,r0
000318  493d              LDR      r1,|L4.1040|
00031a  5d08              LDRB     r0,[r1,r4]
00031c  f7fffffe          BL       BspTm1639_Writebyte
000320  493b              LDR      r1,|L4.1040|
000322  5d09              LDRB     r1,[r1,r4]
000324  2208              MOVS     r2,#8
000326  ea421021          ORR      r0,r2,r1,ASR #4
00032a  f7fffffe          BL       BspTm1639_Writebyte
;;;121    			    udat = ShowDate/10000%10;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);//十位
00032e  f2427010          MOV      r0,#0x2710
000332  fbb5f0f0          UDIV     r0,r5,r0
000336  210a              MOVS     r1,#0xa
000338  fbb0f2f1          UDIV     r2,r0,r1
00033c  fb010412          MLS      r4,r1,r2,r0
000340  4933              LDR      r1,|L4.1040|
000342  5d08              LDRB     r0,[r1,r4]
000344  f7fffffe          BL       BspTm1639_Writebyte
000348  4931              LDR      r1,|L4.1040|
00034a  5d09              LDRB     r1,[r1,r4]
00034c  1108              ASRS     r0,r1,#4
00034e  f7fffffe          BL       BspTm1639_Writebyte
;;;122    			    udat = ShowDate/100000%10;	BspTm1639_Writebyte(table[udat]);   BspTm1639_Writebyte(table[udat]>>4);//百位       
000352  4831              LDR      r0,|L4.1048|
000354  fbb5f0f0          UDIV     r0,r5,r0
000358  210a              MOVS     r1,#0xa
00035a  fbb0f2f1          UDIV     r2,r0,r1
00035e  fb010412          MLS      r4,r1,r2,r0
000362  492b              LDR      r1,|L4.1040|
000364  5d08              LDRB     r0,[r1,r4]
000366  f7fffffe          BL       BspTm1639_Writebyte
00036a  4929              LDR      r1,|L4.1040|
00036c  5d09              LDRB     r1,[r1,r4]
00036e  1108              ASRS     r0,r1,#4
000370  f7fffffe          BL       BspTm1639_Writebyte
;;;123    			    udat = ShowDate/1000000%10;	BspTm1639_Writebyte(table[udat]);   BspTm1639_Writebyte(table[udat]>>4);//千位       
000374  4827              LDR      r0,|L4.1044|
000376  fbb5f0f0          UDIV     r0,r5,r0
00037a  210a              MOVS     r1,#0xa
00037c  fbb0f2f1          UDIV     r2,r0,r1
000380  fb010412          MLS      r4,r1,r2,r0
000384  4922              LDR      r1,|L4.1040|
000386  5d08              LDRB     r0,[r1,r4]
000388  f7fffffe          BL       BspTm1639_Writebyte
00038c  4920              LDR      r1,|L4.1040|
00038e  5d09              LDRB     r1,[r1,r4]
000390  1108              ASRS     r0,r1,#4
000392  f7fffffe          BL       BspTm1639_Writebyte
                  |L4.918|
;;;124    			}
;;;125    			BspTm1639_Writebyte(0x00);	BspTm1639_Writebyte(0x00); //DIG6
000396  2000              MOVS     r0,#0
000398  f7fffffe          BL       BspTm1639_Writebyte
00039c  2000              MOVS     r0,#0
00039e  f7fffffe          BL       BspTm1639_Writebyte
;;;126    			BspTm1639_Writebyte(0x00);	BspTm1639_Writebyte(0x00); //DIG7
0003a2  2000              MOVS     r0,#0
0003a4  f7fffffe          BL       BspTm1639_Writebyte
0003a8  2000              MOVS     r0,#0
0003aa  f7fffffe          BL       BspTm1639_Writebyte
0003ae  e055              B        |L4.1116|
                  |L4.944|
;;;127    		}
;;;128    		else if(ShowMode==0x05)
0003b0  2f05              CMP      r7,#5
0003b2  d153              BNE      |L4.1116|
;;;129    		{
;;;130    			BspTm1639_Writebyte(DIG0);
0003b4  20c0              MOVS     r0,#0xc0
0003b6  f7fffffe          BL       BspTm1639_Writebyte
;;;131    			udat = 0x00;				BspTm1639_Writebyte(udat);			BspTm1639_Writebyte(udat);
0003ba  2400              MOVS     r4,#0
0003bc  4620              MOV      r0,r4
0003be  f7fffffe          BL       BspTm1639_Writebyte
0003c2  4620              MOV      r0,r4
0003c4  f7fffffe          BL       BspTm1639_Writebyte
;;;132    			udat = 0x00;				BspTm1639_Writebyte(udat);			BspTm1639_Writebyte(udat);
0003c8  bf00              NOP      
0003ca  4620              MOV      r0,r4
0003cc  f7fffffe          BL       BspTm1639_Writebyte
0003d0  4620              MOV      r0,r4
0003d2  f7fffffe          BL       BspTm1639_Writebyte
;;;133    			udat = 0x00;				BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0003d6  bf00              NOP      
0003d8  490d              LDR      r1,|L4.1040|
0003da  5d08              LDRB     r0,[r1,r4]
0003dc  f7fffffe          BL       BspTm1639_Writebyte
0003e0  490b              LDR      r1,|L4.1040|
0003e2  5d09              LDRB     r1,[r1,r4]
0003e4  1108              ASRS     r0,r1,#4
0003e6  f7fffffe          BL       BspTm1639_Writebyte
;;;134    			udat = 0x00;				BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0003ea  bf00              NOP      
0003ec  4908              LDR      r1,|L4.1040|
0003ee  5d08              LDRB     r0,[r1,r4]
0003f0  f7fffffe          BL       BspTm1639_Writebyte
0003f4  4906              LDR      r1,|L4.1040|
0003f6  5d09              LDRB     r1,[r1,r4]
0003f8  1108              ASRS     r0,r1,#4
0003fa  f7fffffe          BL       BspTm1639_Writebyte
;;;135    			udat = 0x00;				BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0003fe  bf00              NOP      
000400  4903              LDR      r1,|L4.1040|
000402  e00b              B        |L4.1052|
                  |L4.1028|
                          DCD      OldShowMode
                  |L4.1032|
                          DCD      OldShowDate
                  |L4.1036|
                          DCD      0x40011000
                  |L4.1040|
                          DCD      table
                  |L4.1044|
                          DCD      0x000f4240
                  |L4.1048|
                          DCD      0x000186a0
                  |L4.1052|
00041c  5d08              LDRB     r0,[r1,r4]
00041e  f7fffffe          BL       BspTm1639_Writebyte
000422  4915              LDR      r1,|L4.1144|
000424  5d09              LDRB     r1,[r1,r4]
000426  1108              ASRS     r0,r1,#4
000428  f7fffffe          BL       BspTm1639_Writebyte
;;;136    			udat = 0x0E;				BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
00042c  240e              MOVS     r4,#0xe
00042e  4912              LDR      r1,|L4.1144|
000430  5d08              LDRB     r0,[r1,r4]
000432  f7fffffe          BL       BspTm1639_Writebyte
000436  4910              LDR      r1,|L4.1144|
000438  5d09              LDRB     r1,[r1,r4]
00043a  1108              ASRS     r0,r1,#4
00043c  f7fffffe          BL       BspTm1639_Writebyte
;;;137    			udat = 0x00;				BspTm1639_Writebyte(udat);			BspTm1639_Writebyte(udat);//DIG6
000440  2400              MOVS     r4,#0
000442  4620              MOV      r0,r4
000444  f7fffffe          BL       BspTm1639_Writebyte
000448  4620              MOV      r0,r4
00044a  f7fffffe          BL       BspTm1639_Writebyte
;;;138    			udat = 0x00;				BspTm1639_Writebyte(udat);			BspTm1639_Writebyte(udat);//DIG7
00044e  bf00              NOP      
000450  4620              MOV      r0,r4
000452  f7fffffe          BL       BspTm1639_Writebyte
000456  4620              MOV      r0,r4
000458  f7fffffe          BL       BspTm1639_Writebyte
                  |L4.1116|
;;;139    		}
;;;140    		TM1639_STB_High();
00045c  2108              MOVS     r1,#8
00045e  4807              LDR      r0,|L4.1148|
000460  f7fffffe          BL       GPIO_SetBits
;;;141    		BspTm1639_Writebyte(LEVEL_USE);
000464  208a              MOVS     r0,#0x8a
000466  f7fffffe          BL       BspTm1639_Writebyte
;;;142    		TM1639_STB_High();
00046a  2108              MOVS     r1,#8
00046c  4803              LDR      r0,|L4.1148|
00046e  f7fffffe          BL       GPIO_SetBits
                  |L4.1138|
;;;143     	}
;;;144    
;;;145    }
000472  e8bd81f0          POP      {r4-r8,pc}
;;;146    
                          ENDP

000476  0000              DCW      0x0000
                  |L4.1144|
                          DCD      table
                  |L4.1148|
                          DCD      0x40011000

                          AREA ||i.BspTm1639_ShowSNDat||, CODE, READONLY, ALIGN=2

                  BspTm1639_ShowSNDat PROC
;;;146    
;;;147    void BspTm1639_ShowSNDat(uint8_t ShowMode,uint8_t *ShowDate)
000000  b570              PUSH     {r4-r6,lr}
;;;148    {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;149     	uint8_t udat;
;;;150    	if(OldShowMode!=ShowMode)	BspTM1639_ClearALL();	//显示模式不同时，清显示
000006  483e              LDR      r0,|L5.256|
000008  7800              LDRB     r0,[r0,#0]  ; OldShowMode
00000a  42b0              CMP      r0,r6
00000c  d001              BEQ      |L5.18|
00000e  f7fffffe          BL       BspTM1639_ClearALL
                  |L5.18|
;;;151    	BspTm1639_Writebyte(MD_AUTO);	//设置为地址自动加1写显示数据
000012  2040              MOVS     r0,#0x40
000014  f7fffffe          BL       BspTm1639_Writebyte
;;;152    	TM1639_STB_High();
000018  2108              MOVS     r1,#8
00001a  483a              LDR      r0,|L5.260|
00001c  f7fffffe          BL       GPIO_SetBits
;;;153    	if(ShowMode==0x11)		//显示卡机SN
000020  2e11              CMP      r6,#0x11
000022  d15e              BNE      |L5.226|
;;;154    	{
;;;155    		BspTm1639_Writebyte(DIG0);
000024  20c0              MOVS     r0,#0xc0
000026  f7fffffe          BL       BspTm1639_Writebyte
;;;156    		udat = (*(ShowDate+3))&0x0F;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
00002a  78e8              LDRB     r0,[r5,#3]
00002c  f000040f          AND      r4,r0,#0xf
000030  4935              LDR      r1,|L5.264|
000032  5d08              LDRB     r0,[r1,r4]
000034  f7fffffe          BL       BspTm1639_Writebyte
000038  4933              LDR      r1,|L5.264|
00003a  5d09              LDRB     r1,[r1,r4]
00003c  1108              ASRS     r0,r1,#4
00003e  f7fffffe          BL       BspTm1639_Writebyte
;;;157    		udat = ((*(ShowDate+3))&0xF0)>>4;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
000042  78e8              LDRB     r0,[r5,#3]
000044  0904              LSRS     r4,r0,#4
000046  4930              LDR      r1,|L5.264|
000048  5d08              LDRB     r0,[r1,r4]
00004a  f7fffffe          BL       BspTm1639_Writebyte
00004e  492e              LDR      r1,|L5.264|
000050  5d09              LDRB     r1,[r1,r4]
000052  1108              ASRS     r0,r1,#4
000054  f7fffffe          BL       BspTm1639_Writebyte
;;;158    		udat = (*(ShowDate+2))&0x0F;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
000058  78a8              LDRB     r0,[r5,#2]
00005a  f000040f          AND      r4,r0,#0xf
00005e  492a              LDR      r1,|L5.264|
000060  5d08              LDRB     r0,[r1,r4]
000062  f7fffffe          BL       BspTm1639_Writebyte
000066  4928              LDR      r1,|L5.264|
000068  5d09              LDRB     r1,[r1,r4]
00006a  1108              ASRS     r0,r1,#4
00006c  f7fffffe          BL       BspTm1639_Writebyte
;;;159    		udat = ((*(ShowDate+2))&0xF0)>>4;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
000070  78a8              LDRB     r0,[r5,#2]
000072  0904              LSRS     r4,r0,#4
000074  4924              LDR      r1,|L5.264|
000076  5d08              LDRB     r0,[r1,r4]
000078  f7fffffe          BL       BspTm1639_Writebyte
00007c  4922              LDR      r1,|L5.264|
00007e  5d09              LDRB     r1,[r1,r4]
000080  1108              ASRS     r0,r1,#4
000082  f7fffffe          BL       BspTm1639_Writebyte
;;;160    		udat = (*(ShowDate+1))&0x0F;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
000086  7868              LDRB     r0,[r5,#1]
000088  f000040f          AND      r4,r0,#0xf
00008c  491e              LDR      r1,|L5.264|
00008e  5d08              LDRB     r0,[r1,r4]
000090  f7fffffe          BL       BspTm1639_Writebyte
000094  491c              LDR      r1,|L5.264|
000096  5d09              LDRB     r1,[r1,r4]
000098  1108              ASRS     r0,r1,#4
00009a  f7fffffe          BL       BspTm1639_Writebyte
;;;161    		udat = ((*(ShowDate+1))&0xF0)>>4;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
00009e  7868              LDRB     r0,[r5,#1]
0000a0  0904              LSRS     r4,r0,#4
0000a2  4919              LDR      r1,|L5.264|
0000a4  5d08              LDRB     r0,[r1,r4]
0000a6  f7fffffe          BL       BspTm1639_Writebyte
0000aa  4917              LDR      r1,|L5.264|
0000ac  5d09              LDRB     r1,[r1,r4]
0000ae  1108              ASRS     r0,r1,#4
0000b0  f7fffffe          BL       BspTm1639_Writebyte
;;;162    		udat = (*(ShowDate+0))&0x0F;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0000b4  7828              LDRB     r0,[r5,#0]
0000b6  f000040f          AND      r4,r0,#0xf
0000ba  4913              LDR      r1,|L5.264|
0000bc  5d08              LDRB     r0,[r1,r4]
0000be  f7fffffe          BL       BspTm1639_Writebyte
0000c2  4911              LDR      r1,|L5.264|
0000c4  5d09              LDRB     r1,[r1,r4]
0000c6  1108              ASRS     r0,r1,#4
0000c8  f7fffffe          BL       BspTm1639_Writebyte
;;;163    		udat = ((*(ShowDate+0))&0xF0)>>4;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0000cc  7828              LDRB     r0,[r5,#0]
0000ce  0904              LSRS     r4,r0,#4
0000d0  490d              LDR      r1,|L5.264|
0000d2  5d08              LDRB     r0,[r1,r4]
0000d4  f7fffffe          BL       BspTm1639_Writebyte
0000d8  490b              LDR      r1,|L5.264|
0000da  5d09              LDRB     r1,[r1,r4]
0000dc  1108              ASRS     r0,r1,#4
0000de  f7fffffe          BL       BspTm1639_Writebyte
                  |L5.226|
;;;164    	}
;;;165    	TM1639_STB_High();
0000e2  2108              MOVS     r1,#8
0000e4  4807              LDR      r0,|L5.260|
0000e6  f7fffffe          BL       GPIO_SetBits
;;;166    	BspTm1639_Writebyte(LEVEL_USE);
0000ea  208a              MOVS     r0,#0x8a
0000ec  f7fffffe          BL       BspTm1639_Writebyte
;;;167    	TM1639_STB_High();
0000f0  2108              MOVS     r1,#8
0000f2  4804              LDR      r0,|L5.260|
0000f4  f7fffffe          BL       GPIO_SetBits
;;;168    	OldShowMode = ShowMode;		//保存数据  防止重复更新
0000f8  4801              LDR      r0,|L5.256|
0000fa  7006              STRB     r6,[r0,#0]
;;;169    }
0000fc  bd70              POP      {r4-r6,pc}
;;;170    
                          ENDP

0000fe  0000              DCW      0x0000
                  |L5.256|
                          DCD      OldShowMode
                  |L5.260|
                          DCD      0x40011000
                  |L5.264|
                          DCD      table

                          AREA ||i.BspTm1639_Writebyte||, CODE, READONLY, ALIGN=2

                  BspTm1639_Writebyte PROC
;;;33     
;;;34     void BspTm1639_Writebyte(uint8_t datx)
000000  b570              PUSH     {r4-r6,lr}
;;;35     {
000002  4604              MOV      r4,r0
;;;36      	uint8_t i;
;;;37     	TM1639_STB_Low();
000004  2108              MOVS     r1,#8
000006  4812              LDR      r0,|L6.80|
000008  f7fffffe          BL       GPIO_ResetBits
;;;38     	for(i=0;i<8;i++)
00000c  2500              MOVS     r5,#0
00000e  e01c              B        |L6.74|
                  |L6.16|
;;;39     	{
;;;40     		TM1639_CLK_Low();	 
000010  2104              MOVS     r1,#4
000012  480f              LDR      r0,|L6.80|
000014  f7fffffe          BL       GPIO_ResetBits
;;;41     		if((datx&0x01)!=0)	TM1639_DIO_High();	 
000018  f0040001          AND      r0,r4,#1
00001c  b120              CBZ      r0,|L6.40|
00001e  2102              MOVS     r1,#2
000020  480b              LDR      r0,|L6.80|
000022  f7fffffe          BL       GPIO_SetBits
000026  e003              B        |L6.48|
                  |L6.40|
;;;42     		else				TM1639_DIO_Low();
000028  2102              MOVS     r1,#2
00002a  4809              LDR      r0,|L6.80|
00002c  f7fffffe          BL       GPIO_ResetBits
                  |L6.48|
;;;43     		BspTm1639_Delay(1);
000030  2001              MOVS     r0,#1
000032  f7fffffe          BL       BspTm1639_Delay
;;;44     		TM1639_CLK_High();
000036  2104              MOVS     r1,#4
000038  4805              LDR      r0,|L6.80|
00003a  f7fffffe          BL       GPIO_SetBits
;;;45     		datx = datx >> 1;
00003e  1064              ASRS     r4,r4,#1
;;;46     		BspTm1639_Delay(1);
000040  2001              MOVS     r0,#1
000042  f7fffffe          BL       BspTm1639_Delay
000046  1c68              ADDS     r0,r5,#1              ;38
000048  b2c5              UXTB     r5,r0                 ;38
                  |L6.74|
00004a  2d08              CMP      r5,#8                 ;38
00004c  dbe0              BLT      |L6.16|
;;;47     	}
;;;48     }
00004e  bd70              POP      {r4-r6,pc}
;;;49     
                          ENDP

                  |L6.80|
                          DCD      0x40011000

                          AREA ||.data||, DATA, ALIGN=2

                  OldShowMode
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  OldShowDate
                          DCD      0x00000000
                  table
000008  3f065b4f          DCB      0x3f,0x06,0x5b,0x4f
00000c  666d7d07          DCB      0x66,0x6d,0x7d,0x07
000010  7f6f777c          DCB      0x7f,0x6f,0x77,0x7c
000014  395e7971          DCB      0x39,0x5e,0x79,0x71
