; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_tm1639.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_tm1639.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User -I"C:\Users\xuan5\Desktop\JOSONG-XS03 V3.0\Project\MDK-ARM(uV4)\RTE" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\bsp_tm1639.crf ..\..\User\bsp\bsp_tm1639.c]
                          THUMB

                          AREA ||i.BspTM1639_ClearALL||, CODE, READONLY, ALIGN=2

                  BspTM1639_ClearALL PROC
;;;117    
;;;118    void BspTM1639_ClearALL(void)
000000  b510              PUSH     {r4,lr}
;;;119    {
;;;120    	u8 i;
;;;121    	TM1639_STB_High();
000002  2108              MOVS     r1,#8
000004  4814              LDR      r0,|L1.88|
000006  f7fffffe          BL       GPIO_SetBits
;;;122    	TM1639_CLK_High();
00000a  2104              MOVS     r1,#4
00000c  4812              LDR      r0,|L1.88|
00000e  f7fffffe          BL       GPIO_SetBits
;;;123    	TM1639_DIO_High();
000012  2102              MOVS     r1,#2
000014  4810              LDR      r0,|L1.88|
000016  f7fffffe          BL       GPIO_SetBits
;;;124    	BspTm1639_Writebyte(0x40);	//数据命令设置
00001a  2040              MOVS     r0,#0x40
00001c  f7fffffe          BL       BspTm1639_Writebyte
;;;125    	TM1639_STB_High();
000020  2108              MOVS     r1,#8
000022  480d              LDR      r0,|L1.88|
000024  f7fffffe          BL       GPIO_SetBits
;;;126    	BspTm1639_Writebyte(DIG0);	//显示地址 起始地址
000028  20c0              MOVS     r0,#0xc0
00002a  f7fffffe          BL       BspTm1639_Writebyte
;;;127    	for(i=0;i<16;i++)	BspTm1639_Writebyte(0x00);
00002e  2400              MOVS     r4,#0
000030  e004              B        |L1.60|
                  |L1.50|
000032  2000              MOVS     r0,#0
000034  f7fffffe          BL       BspTm1639_Writebyte
000038  1c60              ADDS     r0,r4,#1
00003a  b2c4              UXTB     r4,r0
                  |L1.60|
00003c  2c10              CMP      r4,#0x10
00003e  dbf8              BLT      |L1.50|
;;;128    	TM1639_STB_High();
000040  2108              MOVS     r1,#8
000042  4805              LDR      r0,|L1.88|
000044  f7fffffe          BL       GPIO_SetBits
;;;129    	BspTm1639_Writebyte(LEVEL_OFF);	//显示控制命令
000048  2080              MOVS     r0,#0x80
00004a  f7fffffe          BL       BspTm1639_Writebyte
;;;130    	TM1639_STB_High();
00004e  2108              MOVS     r1,#8
000050  4801              LDR      r0,|L1.88|
000052  f7fffffe          BL       GPIO_SetBits
;;;131    }
000056  bd10              POP      {r4,pc}
;;;132    
                          ENDP

                  |L1.88|
                          DCD      0x40011000

                          AREA ||i.BspTm1639_Config||, CODE, READONLY, ALIGN=2

                  BspTm1639_Config PROC
;;;22     
;;;23     void BspTm1639_Config(void) 
000000  b508              PUSH     {r3,lr}
;;;24     {
;;;25     	GPIO_InitTypeDef GPIO_InitStructure;
;;;26     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC , ENABLE); 
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;27     
;;;28     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1|GPIO_Pin_2|GPIO_Pin_3;
00000a  200e              MOVS     r0,#0xe
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;29     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;30     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;31     	GPIO_Init(GPIOC, &GPIO_InitStructure);					 
00001c  4669              MOV      r1,sp
00001e  4803              LDR      r0,|L2.44|
000020  f7fffffe          BL       GPIO_Init
;;;32     
;;;33     	BspTM1639_ClearALL();	//上电清显示
000024  f7fffffe          BL       BspTM1639_ClearALL
;;;34     }
000028  bd08              POP      {r3,pc}
;;;35     
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x40011000

                          AREA ||i.BspTm1639_Delay||, CODE, READONLY, ALIGN=1

                  BspTm1639_Delay PROC
;;;13     
;;;14     void BspTm1639_Delay(__IO uint16_t z) 
000000  b501              PUSH     {r0,lr}
;;;15     { 
000002  b081              SUB      sp,sp,#4
;;;16     	__IO uint8_t x;
;;;17     	while(z--)
000004  e00b              B        |L3.30|
                  |L3.6|
;;;18     	{
;;;19     		for(x=100;x>0;x--);
000006  2064              MOVS     r0,#0x64
000008  9000              STR      r0,[sp,#0]
00000a  e004              B        |L3.22|
                  |L3.12|
00000c  f89d0000          LDRB     r0,[sp,#0]
000010  1e40              SUBS     r0,r0,#1
000012  b2c0              UXTB     r0,r0
000014  9000              STR      r0,[sp,#0]
                  |L3.22|
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  2800              CMP      r0,#0
00001c  dcf6              BGT      |L3.12|
                  |L3.30|
00001e  f8bd0004          LDRH     r0,[sp,#4]            ;17
000022  1e41              SUBS     r1,r0,#1              ;17
000024  b289              UXTH     r1,r1                 ;17
000026  9101              STR      r1,[sp,#4]            ;17
000028  2800              CMP      r0,#0                 ;17
00002a  d1ec              BNE      |L3.6|
;;;20     	}
;;;21     }
00002c  bd0c              POP      {r2,r3,pc}
;;;22     
                          ENDP


                          AREA ||i.BspTm1639_Show||, CODE, READONLY, ALIGN=2

                  BspTm1639_Show PROC
;;;51     
;;;52     void BspTm1639_Show(uint8_t ShowMode,uint16_t ShowDate)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;53     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;54      	uint8_t i;
;;;55      	if((OldShowMode==ShowMode)&&(OldShowDate==ShowDate));	//数据、模式相同不刷新
000008  486d              LDR      r0,|L4.448|
00000a  7800              LDRB     r0,[r0,#0]  ; OldShowMode
00000c  42a0              CMP      r0,r4
00000e  d103              BNE      |L4.24|
000010  486c              LDR      r0,|L4.452|
000012  6800              LDR      r0,[r0,#0]  ; OldShowDate
000014  42a8              CMP      r0,r5
000016  d07d              BEQ      |L4.276|
                  |L4.24|
;;;56      	else
;;;57      	{
;;;58     		if(OldShowMode!=ShowMode)	BspTM1639_ClearALL();	//显示模式不同时，清显示
000018  4869              LDR      r0,|L4.448|
00001a  7800              LDRB     r0,[r0,#0]  ; OldShowMode
00001c  42a0              CMP      r0,r4
00001e  d001              BEQ      |L4.36|
000020  f7fffffe          BL       BspTM1639_ClearALL
                  |L4.36|
;;;59      		OldShowMode = ShowMode;		//保存数据  防止重复更新
000024  4866              LDR      r0,|L4.448|
000026  7004              STRB     r4,[r0,#0]
;;;60     		OldShowDate = ShowDate;		//		
000028  4866              LDR      r0,|L4.452|
00002a  6005              STR      r5,[r0,#0]  ; OldShowDate
;;;61     		BspTm1639_Writebyte(MD_AUTO);	//设置为地址自动加1写显示数据
00002c  2040              MOVS     r0,#0x40
00002e  f7fffffe          BL       BspTm1639_Writebyte
;;;62     		TM1639_STB_High();
000032  2108              MOVS     r1,#8
000034  4864              LDR      r0,|L4.456|
000036  f7fffffe          BL       GPIO_SetBits
;;;63             if(ShowMode==0xA1)	//上电初始化显示值
00003a  2ca1              CMP      r4,#0xa1
00003c  d11b              BNE      |L4.118|
;;;64     		{
;;;65     			BspTm1639_Writebyte(DIG0);
00003e  20c0              MOVS     r0,#0xc0
000040  f7fffffe          BL       BspTm1639_Writebyte
;;;66     			BspTm1639_Writebyte(0x0F);	BspTm1639_Writebyte(0x00);
000044  200f              MOVS     r0,#0xf
000046  f7fffffe          BL       BspTm1639_Writebyte
00004a  2000              MOVS     r0,#0
00004c  f7fffffe          BL       BspTm1639_Writebyte
;;;67     			for(i=0;i<2;i++)
000050  2600              MOVS     r6,#0
000052  e007              B        |L4.100|
                  |L4.84|
;;;68     			{
;;;69     				BspTm1639_Writebyte(0x09);	BspTm1639_Writebyte(0x00);
000054  2009              MOVS     r0,#9
000056  f7fffffe          BL       BspTm1639_Writebyte
00005a  2000              MOVS     r0,#0
00005c  f7fffffe          BL       BspTm1639_Writebyte
000060  1c70              ADDS     r0,r6,#1              ;67
000062  b2c6              UXTB     r6,r0                 ;67
                  |L4.100|
000064  2e02              CMP      r6,#2                 ;67
000066  dbf5              BLT      |L4.84|
;;;70     			}
;;;71     			BspTm1639_Writebyte(0x09);	BspTm1639_Writebyte(0x03);		
000068  2009              MOVS     r0,#9
00006a  f7fffffe          BL       BspTm1639_Writebyte
00006e  2003              MOVS     r0,#3
000070  f7fffffe          BL       BspTm1639_Writebyte
000074  e097              B        |L4.422|
                  |L4.118|
;;;72     		}
;;;73     		else    //显示代码
;;;74     		{
;;;75     			BspTm1639_Writebyte(DIG0);
000076  20c0              MOVS     r0,#0xc0
000078  f7fffffe          BL       BspTm1639_Writebyte
;;;76     			BspTm1639_Writebyte(table[ShowDate%10]);		BspTm1639_Writebyte(table[ShowDate%10]>>4);
00007c  200a              MOVS     r0,#0xa
00007e  fb95f1f0          SDIV     r1,r5,r0
000082  fb005011          MLS      r0,r0,r1,r5
000086  4951              LDR      r1,|L4.460|
000088  5c0f              LDRB     r7,[r1,r0]
00008a  4638              MOV      r0,r7
00008c  f7fffffe          BL       BspTm1639_Writebyte
000090  200a              MOVS     r0,#0xa
000092  fb95f1f0          SDIV     r1,r5,r0
000096  fb005011          MLS      r0,r0,r1,r5
00009a  494c              LDR      r1,|L4.460|
00009c  5c08              LDRB     r0,[r1,r0]
00009e  1107              ASRS     r7,r0,#4
0000a0  4638              MOV      r0,r7
0000a2  f7fffffe          BL       BspTm1639_Writebyte
;;;77     			BspTm1639_Writebyte(table[ShowDate/10%10]);		BspTm1639_Writebyte(table[ShowDate/10%10]>>4);
0000a6  200a              MOVS     r0,#0xa
0000a8  fb95f0f0          SDIV     r0,r5,r0
0000ac  210a              MOVS     r1,#0xa
0000ae  fb90f2f1          SDIV     r2,r0,r1
0000b2  fb010012          MLS      r0,r1,r2,r0
0000b6  4945              LDR      r1,|L4.460|
0000b8  5c0f              LDRB     r7,[r1,r0]
0000ba  4638              MOV      r0,r7
0000bc  f7fffffe          BL       BspTm1639_Writebyte
0000c0  200a              MOVS     r0,#0xa
0000c2  fb95f0f0          SDIV     r0,r5,r0
0000c6  210a              MOVS     r1,#0xa
0000c8  fb90f2f1          SDIV     r2,r0,r1
0000cc  fb010012          MLS      r0,r1,r2,r0
0000d0  493e              LDR      r1,|L4.460|
0000d2  5c08              LDRB     r0,[r1,r0]
0000d4  1107              ASRS     r7,r0,#4
0000d6  4638              MOV      r0,r7
0000d8  f7fffffe          BL       BspTm1639_Writebyte
;;;78     			BspTm1639_Writebyte(table[ShowDate/100]);		BspTm1639_Writebyte(table[ShowDate/100]>>4);
0000dc  2064              MOVS     r0,#0x64
0000de  fb95f0f0          SDIV     r0,r5,r0
0000e2  493a              LDR      r1,|L4.460|
0000e4  5c0f              LDRB     r7,[r1,r0]
0000e6  4638              MOV      r0,r7
0000e8  f7fffffe          BL       BspTm1639_Writebyte
0000ec  2064              MOVS     r0,#0x64
0000ee  fb95f0f0          SDIV     r0,r5,r0
0000f2  4936              LDR      r1,|L4.460|
0000f4  5c08              LDRB     r0,[r1,r0]
0000f6  1107              ASRS     r7,r0,#4
0000f8  4638              MOV      r0,r7
0000fa  f7fffffe          BL       BspTm1639_Writebyte
;;;79                 if(ShowMode==0x00)      {BspTm1639_Writebyte(Table_S[22]); BspTm1639_Writebyte(Table_S[22]>>4|0x08); }  //电压U
0000fe  b96c              CBNZ     r4,|L4.284|
000100  4933              LDR      r1,|L4.464|
000102  7d88              LDRB     r0,[r1,#0x16]  ; Table_S
000104  f7fffffe          BL       BspTm1639_Writebyte
000108  4931              LDR      r1,|L4.464|
00010a  7d89              LDRB     r1,[r1,#0x16]  ; Table_S
00010c  2208              MOVS     r2,#8
00010e  ea421021          ORR      r0,r2,r1,ASR #4
000112  e000              B        |L4.278|
                  |L4.276|
000114  e052              B        |L4.444|
                  |L4.278|
000116  f7fffffe          BL       BspTm1639_Writebyte
00011a  e044              B        |L4.422|
                  |L4.284|
;;;80                 else if(ShowMode==0x01) {BspTm1639_Writebyte(Table_S[ 0]); BspTm1639_Writebyte(Table_S[ 0]>>4|0x08); }  //电流A
00011c  2c01              CMP      r4,#1
00011e  d10b              BNE      |L4.312|
000120  492b              LDR      r1,|L4.464|
000122  7808              LDRB     r0,[r1,#0]  ; Table_S
000124  f7fffffe          BL       BspTm1639_Writebyte
000128  4929              LDR      r1,|L4.464|
00012a  7809              LDRB     r1,[r1,#0]  ; Table_S
00012c  2208              MOVS     r2,#8
00012e  ea421021          ORR      r0,r2,r1,ASR #4
000132  f7fffffe          BL       BspTm1639_Writebyte
000136  e036              B        |L4.422|
                  |L4.312|
;;;81                 else if(ShowMode==0x02) {BspTm1639_Writebyte(Table_S[ 2]); BspTm1639_Writebyte(Table_S[ 2]>>4|0x08); }  //温度C
000138  2c02              CMP      r4,#2
00013a  d10b              BNE      |L4.340|
00013c  4924              LDR      r1,|L4.464|
00013e  7888              LDRB     r0,[r1,#2]  ; Table_S
000140  f7fffffe          BL       BspTm1639_Writebyte
000144  4922              LDR      r1,|L4.464|
000146  7889              LDRB     r1,[r1,#2]  ; Table_S
000148  2208              MOVS     r2,#8
00014a  ea421021          ORR      r0,r2,r1,ASR #4
00014e  f7fffffe          BL       BspTm1639_Writebyte
000152  e028              B        |L4.422|
                  |L4.340|
;;;82                 else if(ShowMode==0x03) {BspTm1639_Writebyte(Table_S[ 6]); BspTm1639_Writebyte(Table_S[ 6]>>4|0x08); }  //湿度F
000154  2c03              CMP      r4,#3
000156  d10b              BNE      |L4.368|
000158  491d              LDR      r1,|L4.464|
00015a  7988              LDRB     r0,[r1,#6]  ; Table_S
00015c  f7fffffe          BL       BspTm1639_Writebyte
000160  491b              LDR      r1,|L4.464|
000162  7989              LDRB     r1,[r1,#6]  ; Table_S
000164  2208              MOVS     r2,#8
000166  ea421021          ORR      r0,r2,r1,ASR #4
00016a  f7fffffe          BL       BspTm1639_Writebyte
00016e  e01a              B        |L4.422|
                  |L4.368|
;;;83                 else if(ShowMode==0x04) {BspTm1639_Writebyte(Table_S[17]); BspTm1639_Writebyte(Table_S[17]>>4|0x08); }  //压力P
000170  2c04              CMP      r4,#4
000172  d10b              BNE      |L4.396|
000174  4916              LDR      r1,|L4.464|
000176  7c48              LDRB     r0,[r1,#0x11]  ; Table_S
000178  f7fffffe          BL       BspTm1639_Writebyte
00017c  4914              LDR      r1,|L4.464|
00017e  7c49              LDRB     r1,[r1,#0x11]  ; Table_S
000180  2208              MOVS     r2,#8
000182  ea421021          ORR      r0,r2,r1,ASR #4
000186  f7fffffe          BL       BspTm1639_Writebyte
00018a  e00c              B        |L4.422|
                  |L4.396|
;;;84                 else if(ShowMode==0x05) {BspTm1639_Writebyte(Table_S[13]); BspTm1639_Writebyte(Table_S[13]>>4|0x08); }  //流量L
00018c  2c05              CMP      r4,#5
00018e  d10a              BNE      |L4.422|
000190  490f              LDR      r1,|L4.464|
000192  7b48              LDRB     r0,[r1,#0xd]  ; Table_S
000194  f7fffffe          BL       BspTm1639_Writebyte
000198  490d              LDR      r1,|L4.464|
00019a  7b49              LDRB     r1,[r1,#0xd]  ; Table_S
00019c  2208              MOVS     r2,#8
00019e  ea421021          ORR      r0,r2,r1,ASR #4
0001a2  f7fffffe          BL       BspTm1639_Writebyte
                  |L4.422|
;;;85     		}
;;;86     		TM1639_STB_High();
0001a6  2108              MOVS     r1,#8
0001a8  4807              LDR      r0,|L4.456|
0001aa  f7fffffe          BL       GPIO_SetBits
;;;87     		BspTm1639_Writebyte(LEVEL_USE);
0001ae  208a              MOVS     r0,#0x8a
0001b0  f7fffffe          BL       BspTm1639_Writebyte
;;;88     		TM1639_STB_High();
0001b4  2108              MOVS     r1,#8
0001b6  4804              LDR      r0,|L4.456|
0001b8  f7fffffe          BL       GPIO_SetBits
                  |L4.444|
;;;89      	}
;;;90     
;;;91     }
0001bc  e8bd81f0          POP      {r4-r8,pc}
;;;92     
                          ENDP

                  |L4.448|
                          DCD      OldShowMode
                  |L4.452|
                          DCD      OldShowDate
                  |L4.456|
                          DCD      0x40011000
                  |L4.460|
                          DCD      table
                  |L4.464|
                          DCD      Table_S

                          AREA ||i.BspTm1639_ShowSNDat||, CODE, READONLY, ALIGN=2

                  BspTm1639_ShowSNDat PROC
;;;92     
;;;93     void BspTm1639_ShowSNDat(uint8_t ShowMode,uint8_t *ShowDate)
000000  b570              PUSH     {r4-r6,lr}
;;;94     {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;95      	uint8_t udat;
;;;96     	if(OldShowMode!=ShowMode)	BspTM1639_ClearALL();	//显示模式不同时，清显示
000006  483e              LDR      r0,|L5.256|
000008  7800              LDRB     r0,[r0,#0]  ; OldShowMode
00000a  42b0              CMP      r0,r6
00000c  d001              BEQ      |L5.18|
00000e  f7fffffe          BL       BspTM1639_ClearALL
                  |L5.18|
;;;97     	BspTm1639_Writebyte(MD_AUTO);	//设置为地址自动加1写显示数据
000012  2040              MOVS     r0,#0x40
000014  f7fffffe          BL       BspTm1639_Writebyte
;;;98     	TM1639_STB_High();
000018  2108              MOVS     r1,#8
00001a  483a              LDR      r0,|L5.260|
00001c  f7fffffe          BL       GPIO_SetBits
;;;99     	if(ShowMode==0x11)		//显示卡机SN
000020  2e11              CMP      r6,#0x11
000022  d15e              BNE      |L5.226|
;;;100    	{
;;;101    		BspTm1639_Writebyte(DIG0);
000024  20c0              MOVS     r0,#0xc0
000026  f7fffffe          BL       BspTm1639_Writebyte
;;;102    		udat = (*(ShowDate+3))&0x0F;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
00002a  78e8              LDRB     r0,[r5,#3]
00002c  f000040f          AND      r4,r0,#0xf
000030  4935              LDR      r1,|L5.264|
000032  5d08              LDRB     r0,[r1,r4]
000034  f7fffffe          BL       BspTm1639_Writebyte
000038  4933              LDR      r1,|L5.264|
00003a  5d09              LDRB     r1,[r1,r4]
00003c  1108              ASRS     r0,r1,#4
00003e  f7fffffe          BL       BspTm1639_Writebyte
;;;103    		udat = ((*(ShowDate+3))&0xF0)>>4;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
000042  78e8              LDRB     r0,[r5,#3]
000044  0904              LSRS     r4,r0,#4
000046  4930              LDR      r1,|L5.264|
000048  5d08              LDRB     r0,[r1,r4]
00004a  f7fffffe          BL       BspTm1639_Writebyte
00004e  492e              LDR      r1,|L5.264|
000050  5d09              LDRB     r1,[r1,r4]
000052  1108              ASRS     r0,r1,#4
000054  f7fffffe          BL       BspTm1639_Writebyte
;;;104    		udat = (*(ShowDate+2))&0x0F;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
000058  78a8              LDRB     r0,[r5,#2]
00005a  f000040f          AND      r4,r0,#0xf
00005e  492a              LDR      r1,|L5.264|
000060  5d08              LDRB     r0,[r1,r4]
000062  f7fffffe          BL       BspTm1639_Writebyte
000066  4928              LDR      r1,|L5.264|
000068  5d09              LDRB     r1,[r1,r4]
00006a  1108              ASRS     r0,r1,#4
00006c  f7fffffe          BL       BspTm1639_Writebyte
;;;105    		udat = ((*(ShowDate+2))&0xF0)>>4;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
000070  78a8              LDRB     r0,[r5,#2]
000072  0904              LSRS     r4,r0,#4
000074  4924              LDR      r1,|L5.264|
000076  5d08              LDRB     r0,[r1,r4]
000078  f7fffffe          BL       BspTm1639_Writebyte
00007c  4922              LDR      r1,|L5.264|
00007e  5d09              LDRB     r1,[r1,r4]
000080  1108              ASRS     r0,r1,#4
000082  f7fffffe          BL       BspTm1639_Writebyte
;;;106    		udat = (*(ShowDate+1))&0x0F;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
000086  7868              LDRB     r0,[r5,#1]
000088  f000040f          AND      r4,r0,#0xf
00008c  491e              LDR      r1,|L5.264|
00008e  5d08              LDRB     r0,[r1,r4]
000090  f7fffffe          BL       BspTm1639_Writebyte
000094  491c              LDR      r1,|L5.264|
000096  5d09              LDRB     r1,[r1,r4]
000098  1108              ASRS     r0,r1,#4
00009a  f7fffffe          BL       BspTm1639_Writebyte
;;;107    		udat = ((*(ShowDate+1))&0xF0)>>4;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
00009e  7868              LDRB     r0,[r5,#1]
0000a0  0904              LSRS     r4,r0,#4
0000a2  4919              LDR      r1,|L5.264|
0000a4  5d08              LDRB     r0,[r1,r4]
0000a6  f7fffffe          BL       BspTm1639_Writebyte
0000aa  4917              LDR      r1,|L5.264|
0000ac  5d09              LDRB     r1,[r1,r4]
0000ae  1108              ASRS     r0,r1,#4
0000b0  f7fffffe          BL       BspTm1639_Writebyte
;;;108    		udat = (*(ShowDate+0))&0x0F;		BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0000b4  7828              LDRB     r0,[r5,#0]
0000b6  f000040f          AND      r4,r0,#0xf
0000ba  4913              LDR      r1,|L5.264|
0000bc  5d08              LDRB     r0,[r1,r4]
0000be  f7fffffe          BL       BspTm1639_Writebyte
0000c2  4911              LDR      r1,|L5.264|
0000c4  5d09              LDRB     r1,[r1,r4]
0000c6  1108              ASRS     r0,r1,#4
0000c8  f7fffffe          BL       BspTm1639_Writebyte
;;;109    		udat = ((*(ShowDate+0))&0xF0)>>4;	BspTm1639_Writebyte(table[udat]);	BspTm1639_Writebyte(table[udat]>>4);
0000cc  7828              LDRB     r0,[r5,#0]
0000ce  0904              LSRS     r4,r0,#4
0000d0  490d              LDR      r1,|L5.264|
0000d2  5d08              LDRB     r0,[r1,r4]
0000d4  f7fffffe          BL       BspTm1639_Writebyte
0000d8  490b              LDR      r1,|L5.264|
0000da  5d09              LDRB     r1,[r1,r4]
0000dc  1108              ASRS     r0,r1,#4
0000de  f7fffffe          BL       BspTm1639_Writebyte
                  |L5.226|
;;;110    	}
;;;111    	TM1639_STB_High();
0000e2  2108              MOVS     r1,#8
0000e4  4807              LDR      r0,|L5.260|
0000e6  f7fffffe          BL       GPIO_SetBits
;;;112    	BspTm1639_Writebyte(LEVEL_USE);
0000ea  208a              MOVS     r0,#0x8a
0000ec  f7fffffe          BL       BspTm1639_Writebyte
;;;113    	TM1639_STB_High();
0000f0  2108              MOVS     r1,#8
0000f2  4804              LDR      r0,|L5.260|
0000f4  f7fffffe          BL       GPIO_SetBits
;;;114    	OldShowMode = ShowMode;		//保存数据  防止重复更新
0000f8  4801              LDR      r0,|L5.256|
0000fa  7006              STRB     r6,[r0,#0]
;;;115    }
0000fc  bd70              POP      {r4-r6,pc}
;;;116    
                          ENDP

0000fe  0000              DCW      0x0000
                  |L5.256|
                          DCD      OldShowMode
                  |L5.260|
                          DCD      0x40011000
                  |L5.264|
                          DCD      table

                          AREA ||i.BspTm1639_Writebyte||, CODE, READONLY, ALIGN=2

                  BspTm1639_Writebyte PROC
;;;35     
;;;36     void BspTm1639_Writebyte(uint8_t datx)
000000  b570              PUSH     {r4-r6,lr}
;;;37     {
000002  4604              MOV      r4,r0
;;;38      	uint8_t i;
;;;39     	TM1639_STB_Low();
000004  2108              MOVS     r1,#8
000006  4812              LDR      r0,|L6.80|
000008  f7fffffe          BL       GPIO_ResetBits
;;;40     	for(i=0;i<8;i++)
00000c  2500              MOVS     r5,#0
00000e  e01c              B        |L6.74|
                  |L6.16|
;;;41     	{
;;;42     		TM1639_CLK_Low();	 
000010  2104              MOVS     r1,#4
000012  480f              LDR      r0,|L6.80|
000014  f7fffffe          BL       GPIO_ResetBits
;;;43     		if((datx&0x01)!=0)	TM1639_DIO_High();	 
000018  f0040001          AND      r0,r4,#1
00001c  b120              CBZ      r0,|L6.40|
00001e  2102              MOVS     r1,#2
000020  480b              LDR      r0,|L6.80|
000022  f7fffffe          BL       GPIO_SetBits
000026  e003              B        |L6.48|
                  |L6.40|
;;;44     		else				TM1639_DIO_Low();
000028  2102              MOVS     r1,#2
00002a  4809              LDR      r0,|L6.80|
00002c  f7fffffe          BL       GPIO_ResetBits
                  |L6.48|
;;;45     		BspTm1639_Delay(1);
000030  2001              MOVS     r0,#1
000032  f7fffffe          BL       BspTm1639_Delay
;;;46     		TM1639_CLK_High();
000036  2104              MOVS     r1,#4
000038  4805              LDR      r0,|L6.80|
00003a  f7fffffe          BL       GPIO_SetBits
;;;47     		datx = datx >> 1;
00003e  1064              ASRS     r4,r4,#1
;;;48     		BspTm1639_Delay(1);
000040  2001              MOVS     r0,#1
000042  f7fffffe          BL       BspTm1639_Delay
000046  1c68              ADDS     r0,r5,#1              ;40
000048  b2c5              UXTB     r5,r0                 ;40
                  |L6.74|
00004a  2d08              CMP      r5,#8                 ;40
00004c  dbe0              BLT      |L6.16|
;;;49     	}
;;;50     }
00004e  bd70              POP      {r4-r6,pc}
;;;51     
                          ENDP

                  |L6.80|
                          DCD      0x40011000

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  table
000000  3f065b4f          DCB      0x3f,0x06,0x5b,0x4f
000004  666d7d07          DCB      0x66,0x6d,0x7d,0x07
000008  7f6f777c          DCB      0x7f,0x6f,0x77,0x7c
00000c  395e7971          DCB      0x39,0x5e,0x79,0x71
                  Table_S
000010  777c3958          DCB      0x77,0x7c,0x39,0x58
000014  5e79713d          DCB      0x5e,0x79,0x71,0x3d
000018  76740f0e          DCB      0x76,0x74,0x0f,0x0e
00001c  75383754          DCB      0x75,0x38,0x37,0x54
000020  5c736731          DCB      0x5c,0x73,0x67,0x31
000024  49783e1c          DCB      0x49,0x78,0x3e,0x1c
000028  7e646e5a          DCB      0x7e,0x64,0x6e,0x5a

                          AREA ||.data||, DATA, ALIGN=2

                  OldShowMode
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  OldShowDate
                          DCD      0x00000000
