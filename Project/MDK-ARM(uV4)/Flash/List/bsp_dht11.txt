; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_dht11.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_dht11.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User -I"C:\Users\xuan5\Desktop\JOSONG-XS03 V3.0\Project\MDK-ARM(uV4)\RTE" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\bsp_dht11.crf ..\..\User\bsp\bsp_Dht11.c]
                          THUMB

                          AREA ||i.BspDht11_Config||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  BspDht11_Config PROC
;;;127    
;;;128    void BspDht11_Config(void) 
000000  b51f              PUSH     {r0-r4,lr}
;;;129    {
;;;130    	uint8_t buf[5],i;
;;;131    	GPIO_InitTypeDef GPIO_InitStructure;
;;;132    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB , ENABLE); 
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;133    
;;;134    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
00000a  f44f7000          MOV      r0,#0x200
00000e  f8ad0004          STRH     r0,[sp,#4]
;;;135    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000012  2010              MOVS     r0,#0x10
000014  f88d0007          STRB     r0,[sp,#7]
;;;136    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000018  2003              MOVS     r0,#3
00001a  f88d0006          STRB     r0,[sp,#6]
;;;137    	GPIO_Init(GPIOB, &GPIO_InitStructure);
00001e  a901              ADD      r1,sp,#4
000020  481c              LDR      r0,|L1.148|
000022  f7fffffe          BL       GPIO_Init
;;;138    	DHT11_Rst();	
000026  f7fffffe          BL       DHT11_Rst
;;;139    	if(DHT11_Check()==0)	printf("DHT11_Init OK!   ");
00002a  f7fffffe          BL       DHT11_Check
00002e  b918              CBNZ     r0,|L1.56|
000030  a019              ADR      r0,|L1.152|
000032  f7fffffe          BL       __2printf
000036  e002              B        |L1.62|
                  |L1.56|
;;;140    	else					printf("DHT11_Init Error!   ");
000038  a01c              ADR      r0,|L1.172|
00003a  f7fffffe          BL       __2printf
                  |L1.62|
;;;141    	for(i=0;i<5;i++)//读取40位数据
00003e  2400              MOVS     r4,#0
000040  e005              B        |L1.78|
                  |L1.66|
;;;142    	{
;;;143    		buf[i]=DHT11_Read_Byte();			
000042  f7fffffe          BL       DHT11_Read_Byte
000046  a902              ADD      r1,sp,#8
000048  5508              STRB     r0,[r1,r4]
00004a  1c60              ADDS     r0,r4,#1              ;141
00004c  b2c4              UXTB     r4,r0                 ;141
                  |L1.78|
00004e  2c05              CMP      r4,#5                 ;141
000050  dbf7              BLT      |L1.66|
;;;144    	}
;;;145    	if(buf[4] != ((uint8_t)(buf[0]+buf[1]+buf[2]+buf[3])))
000052  f89d0008          LDRB     r0,[sp,#8]
000056  f89d1009          LDRB     r1,[sp,#9]
00005a  4408              ADD      r0,r0,r1
00005c  f89d100a          LDRB     r1,[sp,#0xa]
000060  4408              ADD      r0,r0,r1
000062  f89d100b          LDRB     r1,[sp,#0xb]
000066  4408              ADD      r0,r0,r1
000068  b2c0              UXTB     r0,r0
00006a  f89d100c          LDRB     r1,[sp,#0xc]
00006e  4288              CMP      r0,r1
000070  d003              BEQ      |L1.122|
;;;146    			printf("Read Date Check Error!\r\n");
000072  a014              ADR      r0,|L1.196|
000074  f7fffffe          BL       __2printf
000078  e00b              B        |L1.146|
                  |L1.122|
;;;147    	else	printf("H:%d.%d; T:%d.%d.\r\n",buf[0],buf[1],buf[2],buf[3]);
00007a  f89d000b          LDRB     r0,[sp,#0xb]
00007e  9000              STR      r0,[sp,#0]
000080  f89d300a          LDRB     r3,[sp,#0xa]
000084  f89d2009          LDRB     r2,[sp,#9]
000088  f89d1008          LDRB     r1,[sp,#8]
00008c  a014              ADR      r0,|L1.224|
00008e  f7fffffe          BL       __2printf
                  |L1.146|
;;;148    }
000092  bd1f              POP      {r0-r4,pc}
;;;149    
                          ENDP

                  |L1.148|
                          DCD      0x40010c00
                  |L1.152|
000098  44485431          DCB      "DHT11_Init OK!   ",0
00009c  315f496e
0000a0  6974204f
0000a4  4b212020
0000a8  2000    
0000aa  00                DCB      0
0000ab  00                DCB      0
                  |L1.172|
0000ac  44485431          DCB      "DHT11_Init Error!   ",0
0000b0  315f496e
0000b4  69742045
0000b8  72726f72
0000bc  21202020
0000c0  00      
0000c1  00                DCB      0
0000c2  00                DCB      0
0000c3  00                DCB      0
                  |L1.196|
0000c4  52656164          DCB      "Read Date Check Error!\r\n",0
0000c8  20446174
0000cc  65204368
0000d0  65636b20
0000d4  4572726f
0000d8  72210d0a
0000dc  00      
0000dd  00                DCB      0
0000de  00                DCB      0
0000df  00                DCB      0
                  |L1.224|
0000e0  483a2564          DCB      "H:%d.%d; T:%d.%d.\r\n",0
0000e4  2e25643b
0000e8  20543a25
0000ec  642e2564
0000f0  2e0d0a00

                          AREA ||i.DHT11_Check||, CODE, READONLY, ALIGN=2

                  DHT11_Check PROC
;;;24     */
;;;25     static uint8_t DHT11_Check(void) 	   
000000  b510              PUSH     {r4,lr}
;;;26     {   
;;;27     	uint8_t retry=0;	
000002  2400              MOVS     r4,#0
;;;28     	DHT11_IO_IN();      //设置为输入	 
000004  4819              LDR      r0,|L2.108|
000006  6800              LDR      r0,[r0,#0]
000008  f02000f0          BIC      r0,r0,#0xf0
00000c  4917              LDR      r1,|L2.108|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0400080          ORR      r0,r0,#0x80
000018  6008              STR      r0,[r1,#0]
;;;29     	while (DHT11_DQ_IN()&&(retry<110))//DHT11会拉低83us
00001a  e004              B        |L2.38|
                  |L2.28|
;;;30     	{
;;;31     		retry++;
00001c  1c60              ADDS     r0,r4,#1
00001e  b2c4              UXTB     r4,r0
;;;32     		delay_us(1);
000020  2001              MOVS     r0,#1
000022  f7fffffe          BL       delay_us
                  |L2.38|
000026  f44f7100          MOV      r1,#0x200             ;29
00002a  4810              LDR      r0,|L2.108|
00002c  1f00              SUBS     r0,r0,#4              ;29
00002e  f7fffffe          BL       GPIO_ReadInputDataBit
000032  b108              CBZ      r0,|L2.56|
000034  2c6e              CMP      r4,#0x6e              ;29
000036  dbf1              BLT      |L2.28|
                  |L2.56|
;;;33     	}	 
;;;34     	if(retry>=100)	return 1;
000038  2c64              CMP      r4,#0x64
00003a  db01              BLT      |L2.64|
00003c  2001              MOVS     r0,#1
                  |L2.62|
;;;35     	else 			retry=0;
;;;36     
;;;37     	while ((!DHT11_DQ_IN())&&(retry<100))//DHT11拉低后会再次拉高87us
;;;38     	{
;;;39     		retry++;
;;;40     		delay_us(1);
;;;41     	};
;;;42     	if(retry>=100)	return 1;	    
;;;43     	return 0;
;;;44     }
00003e  bd10              POP      {r4,pc}
                  |L2.64|
000040  2400              MOVS     r4,#0                 ;35
000042  e004              B        |L2.78|
                  |L2.68|
000044  1c60              ADDS     r0,r4,#1              ;39
000046  b2c4              UXTB     r4,r0                 ;39
000048  2001              MOVS     r0,#1                 ;40
00004a  f7fffffe          BL       delay_us
                  |L2.78|
00004e  f44f7100          MOV      r1,#0x200             ;37
000052  4806              LDR      r0,|L2.108|
000054  1f00              SUBS     r0,r0,#4              ;37
000056  f7fffffe          BL       GPIO_ReadInputDataBit
00005a  b908              CBNZ     r0,|L2.96|
00005c  2c64              CMP      r4,#0x64              ;37
00005e  dbf1              BLT      |L2.68|
                  |L2.96|
000060  2c64              CMP      r4,#0x64              ;42
000062  db01              BLT      |L2.104|
000064  2001              MOVS     r0,#1                 ;42
000066  e7ea              B        |L2.62|
                  |L2.104|
000068  2000              MOVS     r0,#0                 ;43
00006a  e7e8              B        |L2.62|
;;;45     
                          ENDP

                  |L2.108|
                          DCD      0x40010c04

                          AREA ||i.DHT11_Read_Bit||, CODE, READONLY, ALIGN=2

                  DHT11_Read_Bit PROC
;;;55     */
;;;56     uint8_t DHT11_Read_Bit(void) 			 
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58      	uint8_t retry=0;	
000002  2400              MOVS     r4,#0
;;;59     	while(DHT11_DQ_IN()&&(retry<100))	//等待变为低电平，即等待进入54us低电平
000004  e004              B        |L3.16|
                  |L3.6|
;;;60     	{
;;;61     		retry++;
000006  1c60              ADDS     r0,r4,#1
000008  b2c4              UXTB     r4,r0
;;;62     		delay_us(1);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       delay_us
                  |L3.16|
000010  f44f7100          MOV      r1,#0x200             ;59
000014  4810              LDR      r0,|L3.88|
000016  f7fffffe          BL       GPIO_ReadInputDataBit
00001a  b108              CBZ      r0,|L3.32|
00001c  2c64              CMP      r4,#0x64              ;59
00001e  dbf2              BLT      |L3.6|
                  |L3.32|
;;;63     	}
;;;64     	retry=0;
000020  2400              MOVS     r4,#0
;;;65     	while(!DHT11_DQ_IN()&&(retry<100))	//等待变高电平,之后根据高电平时间判断数据是1还是0
000022  e004              B        |L3.46|
                  |L3.36|
;;;66     	{
;;;67     		retry++;
000024  1c60              ADDS     r0,r4,#1
000026  b2c4              UXTB     r4,r0
;;;68     		delay_us(1);
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       delay_us
                  |L3.46|
00002e  f44f7100          MOV      r1,#0x200             ;65
000032  4809              LDR      r0,|L3.88|
000034  f7fffffe          BL       GPIO_ReadInputDataBit
000038  b908              CBNZ     r0,|L3.62|
00003a  2c64              CMP      r4,#0x64              ;65
00003c  dbf2              BLT      |L3.36|
                  |L3.62|
;;;69     	}
;;;70     	delay_us(40);		//等待48us，该值不宜取大，以防跳出下一位开始时间
00003e  2028              MOVS     r0,#0x28
000040  f7fffffe          BL       delay_us
;;;71     	if(DHT11_DQ_IN())return 1;
000044  f44f7100          MOV      r1,#0x200
000048  4803              LDR      r0,|L3.88|
00004a  f7fffffe          BL       GPIO_ReadInputDataBit
00004e  b108              CBZ      r0,|L3.84|
000050  2001              MOVS     r0,#1
                  |L3.82|
;;;72     	else return 0;
;;;73     }
000052  bd10              POP      {r4,pc}
                  |L3.84|
000054  2000              MOVS     r0,#0                 ;72
000056  e7fc              B        |L3.82|
;;;74     /*
                          ENDP

                  |L3.88|
                          DCD      0x40010c00

                          AREA ||i.DHT11_Read_Byte||, CODE, READONLY, ALIGN=1

                  DHT11_Read_Byte PROC
;;;82     */
;;;83     uint8_t DHT11_Read_Byte(void)    
000000  b570              PUSH     {r4-r6,lr}
;;;84     {        
;;;85     	uint8_t i,dat;
;;;86     	
;;;87     	dat=0;
000002  2400              MOVS     r4,#0
;;;88     	for (i=0;i<8;i++) 
000004  2500              MOVS     r5,#0
000006  e006              B        |L4.22|
                  |L4.8|
;;;89     	{
;;;90        		dat<<=1; 
000008  0660              LSLS     r0,r4,#25
00000a  0e04              LSRS     r4,r0,#24
;;;91     	    dat|=DHT11_Read_Bit();
00000c  f7fffffe          BL       DHT11_Read_Bit
000010  4304              ORRS     r4,r4,r0
000012  1c68              ADDS     r0,r5,#1              ;88
000014  b2c5              UXTB     r5,r0                 ;88
                  |L4.22|
000016  2d08              CMP      r5,#8                 ;88
000018  dbf6              BLT      |L4.8|
;;;92         }						    
;;;93         return dat;
00001a  4620              MOV      r0,r4
;;;94     }
00001c  bd70              POP      {r4-r6,pc}
;;;95     /*
                          ENDP


                          AREA ||i.DHT11_Read_Data||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  DHT11_Read_Data PROC
;;;103    */
;;;104    uint8_t DHT11_Read_Data(uint8_t *buf)    
000000  b538              PUSH     {r3-r5,lr}
;;;105    {        
000002  4604              MOV      r4,r0
;;;106    	uint8_t i;
;;;107    	
;;;108    	DHT11_Rst();
000004  f7fffffe          BL       DHT11_Rst
;;;109    	if(DHT11_Check()==0)
000008  f7fffffe          BL       DHT11_Check
00000c  2800              CMP      r0,#0
00000e  d121              BNE      |L5.84|
;;;110    	{	
;;;111    		for(i=0;i<5;i++)//读取40位数据
000010  2500              MOVS     r5,#0
000012  e004              B        |L5.30|
                  |L5.20|
;;;112    		{
;;;113    			buf[i]=DHT11_Read_Byte();			
000014  f7fffffe          BL       DHT11_Read_Byte
000018  5560              STRB     r0,[r4,r5]
00001a  1c68              ADDS     r0,r5,#1              ;111
00001c  b2c5              UXTB     r5,r0                 ;111
                  |L5.30|
00001e  2d05              CMP      r5,#5                 ;111
000020  dbf8              BLT      |L5.20|
;;;114    		}
;;;115    		//printf("0x%02X 0x%02X 0x%02X 0x%02X 0x%02X.",buf[0],buf[1],buf[2],buf[3],buf[4]);
;;;116    		if(buf[4] != ((uint8_t)(buf[0]+buf[1]+buf[2]+buf[3])))
000022  7820              LDRB     r0,[r4,#0]
000024  7861              LDRB     r1,[r4,#1]
000026  4408              ADD      r0,r0,r1
000028  78a1              LDRB     r1,[r4,#2]
00002a  4408              ADD      r0,r0,r1
00002c  78e1              LDRB     r1,[r4,#3]
00002e  4408              ADD      r0,r0,r1
000030  b2c0              UXTB     r0,r0
000032  7921              LDRB     r1,[r4,#4]
000034  4288              CMP      r0,r1
000036  d004              BEQ      |L5.66|
;;;117    		{
;;;118    			printf("Read Date Check Error!\r\n");
000038  a008              ADR      r0,|L5.92|
00003a  f7fffffe          BL       __2printf
;;;119    			return 1;
00003e  2001              MOVS     r0,#1
                  |L5.64|
;;;120    		}
;;;121    		printf(">>DHT11_Read_Data H:%d.%d; T:%d.%d.\r\n",buf[0],buf[1],buf[2],buf[3]);
;;;122    	}
;;;123    	else	return 1;
;;;124    	return 0;	    
;;;125    }
000040  bd38              POP      {r3-r5,pc}
                  |L5.66|
000042  78e0              LDRB     r0,[r4,#3]            ;121
000044  9000              STR      r0,[sp,#0]            ;121
000046  78a3              LDRB     r3,[r4,#2]            ;121
000048  7862              LDRB     r2,[r4,#1]            ;121
00004a  7821              LDRB     r1,[r4,#0]            ;121
00004c  a00a              ADR      r0,|L5.120|
00004e  f7fffffe          BL       __2printf
000052  e001              B        |L5.88|
                  |L5.84|
000054  2001              MOVS     r0,#1                 ;123
000056  e7f3              B        |L5.64|
                  |L5.88|
000058  2000              MOVS     r0,#0                 ;124
00005a  e7f1              B        |L5.64|
;;;126    
                          ENDP

                  |L5.92|
00005c  52656164          DCB      "Read Date Check Error!\r\n",0
000060  20446174
000064  65204368
000068  65636b20
00006c  4572726f
000070  72210d0a
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L5.120|
000078  3e3e4448          DCB      ">>DHT11_Read_Data H:%d.%d; T:%d.%d.\r\n",0
00007c  5431315f
000080  52656164
000084  5f446174
000088  6120483a
00008c  25642e25
000090  643b2054
000094  3a25642e
000098  25642e0d
00009c  0a00    
00009e  00                DCB      0
00009f  00                DCB      0

                          AREA ||i.DHT11_Rst||, CODE, READONLY, ALIGN=2

                  DHT11_Rst PROC
;;;6      //复位DHT11
;;;7      static void DHT11_Rst(void)	   
000000  b510              PUSH     {r4,lr}
;;;8      {                 
;;;9      	DHT11_IO_OUT(); 	//设置为输出
000002  480e              LDR      r0,|L6.60|
000004  6800              LDR      r0,[r0,#0]
000006  f02000f0          BIC      r0,r0,#0xf0
00000a  490c              LDR      r1,|L6.60|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0400030          ORR      r0,r0,#0x30
000016  6008              STR      r0,[r1,#0]
;;;10     	DHT11_DQ_Low(); 	//拉低DQ
000018  1549              ASRS     r1,r1,#21
00001a  4808              LDR      r0,|L6.60|
00001c  1f00              SUBS     r0,r0,#4
00001e  f7fffffe          BL       GPIO_ResetBits
;;;11     	delay_ms(20);    	//拉低至少18ms
000022  2014              MOVS     r0,#0x14
000024  f7fffffe          BL       delay_ms
;;;12     	DHT11_DQ_High(); 	//DQ=1 
000028  f44f7100          MOV      r1,#0x200
00002c  4803              LDR      r0,|L6.60|
00002e  1f00              SUBS     r0,r0,#4
000030  f7fffffe          BL       GPIO_SetBits
;;;13     	delay_us(30);     	//主机拉高20~40us
000034  201e              MOVS     r0,#0x1e
000036  f7fffffe          BL       delay_us
;;;14     }
00003a  bd10              POP      {r4,pc}
;;;15     
                          ENDP

                  |L6.60|
                          DCD      0x40010c04
